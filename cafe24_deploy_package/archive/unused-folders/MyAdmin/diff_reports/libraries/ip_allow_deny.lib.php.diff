--- ip_allow_deny.lib.php (original)
+++ ip_allow_deny.lib.php (modified)
@@ -26,7 +26,7 @@
          */
         function ip2long($dotted)
         {
-            $dotted = split('\.', $dotted);
+            $dotted = explode('\.', $dotted);
             $ip     = (double)0;
             $y      = 0x1000000;
             for ($i = 0; $i < 4; $i++) {
@@ -219,7 +219,7 @@
             // True IP without proxy
             return $direct_ip;
         } else {
-            $is_ip = ereg('^([0-9]{1,3}\.){3,3}[0-9]{1,3}', $proxy_ip, $regs);
+            $is_ip = preg_match('^([0-9]{1,3}\.){3,3}[0-9]{1,3}', $proxy_ip, $regs);
             if ($is_ip && (count($regs) > 0)) {
                 // True IP behind a proxy
                 return $regs[0];
@@ -257,7 +257,7 @@
     {
        $result = TRUE;
 
-       if (ereg('([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)/([0-9]+)', $testRange, $regs)) {
+       if (preg_match('([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)/([0-9]+)', $testRange, $regs)) {
            // performs a mask match
            $ipl    = ip2long($ipToTest);
            $rangel = ip2long($regs[1] . '.' . $regs[2] . '.' . $regs[3] . '.' . $regs[4]);
@@ -277,12 +277,12 @@
            }
        } else {
            // range based
-           $maskocts = split('\.', $testRange);
-           $ipocts   = split('\.', $ipToTest);
+           $maskocts = explode('\.', $testRange);
+           $ipocts   = explode('\.', $ipToTest);
 
            // perform a range match
            for ($i = 0; $i < 4; $i++) {
-                if (ereg('\[([0-9]+)\-([0-9]+)\]', $maskocts[$i], $regs)) {
+                if (preg_match('\[([0-9]+)\-([0-9]+)\]', $maskocts[$i], $regs)) {
                     if (($ipocts[$i] > $regs[2])
                         || ($ipocts[$i] < $regs[1])) {
                         $result = FALSE;