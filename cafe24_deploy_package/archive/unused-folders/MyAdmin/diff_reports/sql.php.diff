--- sql.php (original)
+++ sql.php (modified)
@@ -13,7 +13,7 @@
  */
 // Security checkings
 if (!empty($goto)) {
-    $is_gotofile     = ereg_replace('^([^?]+).*$', '\\1', $goto);
+    $is_gotofile     = preg_replace('^([^?]+).*$', '\\1', $goto);
     if (!@file_exists('./' . $is_gotofile)) {
         unset($goto);
     } else {
@@ -48,7 +48,7 @@
  */
 if (!defined('PMA_CHK_DROP')
     && !$cfg['AllowUserDropDatabase']
-    && eregi('DROP[[:space:]]+(IF EXISTS[[:space:]]+)?DATABASE[[:space:]]', $sql_query)) {
+    && preg_match('DROP[[:space:]]+(IF EXISTS[[:space:]]+)?DATABASE[[:space:]]', $sql_query)) {
     // Checks if the user is a Superuser
     // TODO: set a global variable with this information
     // loic1: optimized query
@@ -91,7 +91,7 @@
 $sql_query = PMA_SQP_formatHtml($parsed_sql, 'query_only');
 
 // here we are sure that SELECT is uppercase
-$is_select = eregi('^SELECT[[:space:]]+', $sql_query);
+$is_select = preg_match('^SELECT[[:space:]]+', $sql_query);
 
 // If the query is a Select, extract the db and table names and modify
 // $db and $table, to have correct page headers, links and left frame.
@@ -105,7 +105,7 @@
 // - do not display the sub-pages links)
 
 if ($is_select) {
-    eregi('^SELECT[[:space:]]+(.*)[[:space:]]+FROM[[:space:]]+(`[^`]+`|[A-Za-z0-9_$]+)([\.]*)(`[^`]*`|[A-Za-z0-9_$]*)', $sql_query, $tmp);
+    preg_match('^SELECT[[:space:]]+(.*)[[:space:]]+FROM[[:space:]]+(`[^`]+`|[A-Za-z0-9_$]+)([\.]*)(`[^`]*`|[A-Za-z0-9_$]*)', $sql_query, $tmp);
 
     if ($tmp[3] == '.') {
         $prev_db = $db;
@@ -145,7 +145,7 @@
         if (strpos(' ' . $goto, 'db_details') == 1 && !empty($table)) {
             unset($table);
         }
-        include('./' . ereg_replace('\.\.*', '.', $goto));
+        include('./' . preg_replace('\.\.*', '.', $goto));
     } else {
         header('Location: ' . $cfg['PmaAbsoluteUri'] . str_replace('&amp;', '&', $goto));
     }
@@ -170,7 +170,7 @@
     $do_confirm = FALSE;
 } else {
      /* SQL-Parser-Analyzer */
-    $do_confirm = (eregi('DROP[[:space:]]+(IF[[:space:]]+EXISTS[[:space:]]+)?(TABLE|DATABASE[[:space:]])|ALTER[[:space:]]+TABLE[[:space:]]+((`[^`]+`)|([A-Za-z0-9_$]+))[[:space:]]+DROP[[:space:]]|DELETE[[:space:]]+FROM[[:space:]]', $sql_query));
+    $do_confirm = (preg_match('DROP[[:space:]]+(IF[[:space:]]+EXISTS[[:space:]]+)?(TABLE|DATABASE[[:space:]])|ALTER[[:space:]]+TABLE[[:space:]]+((`[^`]+`)|([A-Za-z0-9_$]+))[[:space:]]+DROP[[:space:]]|DELETE[[:space:]]+FROM[[:space:]]', $sql_query));
 }
 
 if ($do_confirm) {
@@ -182,19 +182,19 @@
     echo '<tt>' . htmlspecialchars($stripped_sql_query) . '</tt>&nbsp;?<br/>' . "\n";
     ?>
 <form action="sql.php" method="post">
-    <input type="hidden" name="lang" value="<?php echo $lang; ?>" />
-    <input type="hidden" name="convcharset" value="<?php echo $convcharset; ?>" />
-    <input type="hidden" name="server" value="<?php echo $server; ?>" />
-    <input type="hidden" name="db" value="<?php echo htmlspecialchars($db); ?>" />
-    <input type="hidden" name="table" value="<?php echo isset($table) ? htmlspecialchars($table) : ''; ?>" />
-    <input type="hidden" name="sql_query" value="<?php echo urlencode(addslashes($sql_query)); ?>" />
-    <input type="hidden" name="zero_rows" value="<?php echo isset($zero_rows) ? $zero_rows : ''; ?>" />
-    <input type="hidden" name="goto" value="<?php echo $goto; ?>" />
-    <input type="hidden" name="back" value="<?php echo isset($back) ? $back : ''; ?>" />
-    <input type="hidden" name="reload" value="<?php echo isset($reload) ? $reload : 0; ?>" />
-    <input type="hidden" name="show_query" value="<?php echo isset($show_query) ? $show_query : ''; ?>" />
-    <input type="submit" name="btnDrop" value="<?php echo $strYes; ?>" />
-    <input type="submit" name="btnDrop" value="<?php echo $strNo; ?>" />
+    <input type="hidden" name="lang" value="<?php echo  $lang ?>" />
+    <input type="hidden" name="convcharset" value="<?php echo  $convcharset ?>" />
+    <input type="hidden" name="server" value="<?php echo  $server ?>" />
+    <input type="hidden" name="db" value="<?php echo  htmlspecialchars($db) ?>" />
+    <input type="hidden" name="table" value="<?php echo  isset($table) ? htmlspecialchars($table) : '' ?>" />
+    <input type="hidden" name="sql_query" value="<?php echo  urlencode(addslashes($sql_query)) ?>" />
+    <input type="hidden" name="zero_rows" value="<?php echo  isset($zero_rows) ? $zero_rows : '' ?>" />
+    <input type="hidden" name="goto" value="<?php echo  $goto ?>" />
+    <input type="hidden" name="back" value="<?php echo  isset($back) ? $back : '' ?>" />
+    <input type="hidden" name="reload" value="<?php echo  isset($reload) ? $reload : 0 ?>" />
+    <input type="hidden" name="show_query" value="<?php echo  isset($show_query) ? $show_query : '' ?>" />
+    <input type="submit" name="btnDrop" value="<?php echo  $strYes ?>" />
+    <input type="submit" name="btnDrop" value="<?php echo  $strNo ?>" />
 </form>
     <?php
     echo "\n";
@@ -215,7 +215,7 @@
     // Defines some variables
     // loic1: A table has to be created -> left frame should be reloaded
     if ((!isset($reload) || $reload == 0)
-        && eregi('^CREATE TABLE[[:space:]]+(.*)', $sql_query)) {
+        && preg_match('^CREATE TABLE[[:space:]]+(.*)', $sql_query)) {
         $reload           = 1;
     }
     // Gets the number of rows per page
@@ -239,25 +239,25 @@
     //                "SELECT COUNT(...) FROM ... GROUP BY ..."
     $is_explain = $is_count = $is_export = $is_delete = $is_insert = $is_affected = $is_show = $is_maint = $is_analyse = $is_group = $is_func = FALSE;
     if ($is_select) { // see line 141
-        $is_group = eregi('[[:space:]]+(GROUP[[:space:]]+BY|HAVING|SELECT[[:space:]]+DISTINCT)[[:space:]]+', $sql_query);
-
-        $is_func =  !$is_group && (eregi('[[:space:]]+(SUM|AVG|STD|STDDEV|MIN|MAX|BIT_OR|BIT_AND)\s*\(', $sql_query));
-        $is_count = !$is_group && (eregi('^SELECT[[:space:]]+COUNT\((.*\.+)?.*\)', $sql_query));
-        $is_export   = (eregi('[[:space:]]+INTO[[:space:]]+OUTFILE[[:space:]]+', $sql_query));
-        $is_analyse  = (eregi('[[:space:]]+PROCEDURE[[:space:]]+ANALYSE\(', $sql_query));
-    } else if (eregi('^EXPLAIN[[:space:]]+', $sql_query)) {
+        $is_group = preg_match('[[:space:]]+(GROUP[[:space:]]+BY|HAVING|SELECT[[:space:]]+DISTINCT)[[:space:]]+', $sql_query);
+
+        $is_func =  !$is_group && (preg_match('[[:space:]]+(SUM|AVG|STD|STDDEV|MIN|MAX|BIT_OR|BIT_AND)\s*\(', $sql_query));
+        $is_count = !$is_group && (preg_match('^SELECT[[:space:]]+COUNT\((.*\.+)?.*\)', $sql_query));
+        $is_export   = (preg_match('[[:space:]]+INTO[[:space:]]+OUTFILE[[:space:]]+', $sql_query));
+        $is_analyse  = (preg_match('[[:space:]]+PROCEDURE[[:space:]]+ANALYSE\(', $sql_query));
+    } else if (preg_match('^EXPLAIN[[:space:]]+', $sql_query)) {
         $is_explain  = TRUE;
-    } else if (eregi('^DELETE[[:space:]]+', $sql_query)) {
+    } else if (preg_match('^DELETE[[:space:]]+', $sql_query)) {
         $is_delete   = TRUE;
         $is_affected = TRUE;
-    } else if (eregi('^(INSERT|LOAD[[:space:]]+DATA|REPLACE)[[:space:]]+', $sql_query)) {
+    } else if (preg_match('^(INSERT|LOAD[[:space:]]+DATA|REPLACE)[[:space:]]+', $sql_query)) {
         $is_insert   = TRUE;
         $is_affected = TRUE;
-    } else if (eregi('^UPDATE[[:space:]]+', $sql_query)) {
+    } else if (preg_match('^UPDATE[[:space:]]+', $sql_query)) {
         $is_affected = TRUE;
-    } else if (eregi('^SHOW[[:space:]]+', $sql_query)) {
+    } else if (preg_match('^SHOW[[:space:]]+', $sql_query)) {
         $is_show     = TRUE;
-    } else if (eregi('^(CHECK|ANALYZE|REPAIR|OPTIMIZE)[[:space:]]+TABLE[[:space:]]+', $sql_query)) {
+    } else if (preg_match('^(CHECK|ANALYZE|REPAIR|OPTIMIZE)[[:space:]]+TABLE[[:space:]]+', $sql_query)) {
         $is_maint    = TRUE;
     }
 
@@ -266,10 +266,10 @@
         && (!$cfg['ShowAll'] || $session_max_rows != 'all')
         && $is_select
         && !($is_count || $is_export || $is_func || $is_analyse)
-        && eregi('[[:space:]]FROM[[:space:]]', $sql_query)
-        && !eregi('[[:space:]]LIMIT[[:space:]0-9,-]+$', $sql_query)) {
+        && preg_match('[[:space:]]FROM[[:space:]]', $sql_query)
+        && !preg_match('[[:space:]]LIMIT[[:space:]0-9,-]+$', $sql_query)) {
         $sql_limit_to_append = " LIMIT $pos, ".$cfg['MaxRows'];
-        if (eregi('(.*)([[:space:]](PROCEDURE[[:space:]](.*)|FOR[[:space:]]+UPDATE|LOCK[[:space:]]+IN[[:space:]]+SHARE[[:space:]]+MODE))$', $sql_query, $regs)) {
+        if (preg_match('(.*)([[:space:]](PROCEDURE[[:space:]](.*)|FOR[[:space:]]+UPDATE|LOCK[[:space:]]+IN[[:space:]]+SHARE[[:space:]]+MODE))$', $sql_query, $regs)) {
             $full_sql_query  = $regs[1] . $sql_limit_to_append . $regs[2];
         } else {
             $full_sql_query  = $sql_query . $sql_limit_to_append;
@@ -281,15 +281,15 @@
     PMA_mysql_select_db($db);
 
     // If the query is a DELETE query with no WHERE clause, get the number of
-    // rows that will be deleted (mysql_affected_rows will always return 0 in
+    // rows that will be deleted (mysqli_affected_rows will always return 0 in
     // this case)
     if ($is_delete
-        && eregi('^DELETE([[:space:]].+)?([[:space:]]FROM[[:space:]](.+))$', $sql_query, $parts)
-        && !eregi('[[:space:]]WHERE[[:space:]]', $parts[3])) {
+        && preg_match('^DELETE([[:space:]].+)?([[:space:]]FROM[[:space:]](.+))$', $sql_query, $parts)
+        && !preg_match('[[:space:]]WHERE[[:space:]]', $parts[3])) {
         $cnt_all_result = @PMA_mysql_query('SELECT COUNT(*) as count' .  $parts[2]);
         if ($cnt_all_result) {
             $num_rows   = PMA_mysql_result($cnt_all_result, 0, 'count');
-            mysql_free_result($cnt_all_result);
+            mysqli_free_result($cnt_all_result);
         } else {
             $num_rows   = 0;
         }
@@ -309,7 +309,7 @@
         if (PMA_mysql_error()) {
             $error        = PMA_mysql_error();
             include('./header.inc.php');
-            $full_err_url = (ereg('^(db_details|tbl_properties)', $err_url))
+            $full_err_url = (preg_match('^(db_details|tbl_properties)', $err_url))
                           ? $err_url . '&amp;show_query=1&amp;sql_query=' . urlencode($sql_query)
                           : $err_url;
             PMA_mysqlDie($error, $full_sql_query, '', $full_err_url);
@@ -317,12 +317,12 @@
 
         // Gets the number of rows affected/returned
         // (This must be done immediately after the query because
-        // mysql_affected_rows() reports about the last query done)
+        // mysqli_affected_rows() reports about the last query done)
 
         if (!$is_affected) {
-            $num_rows = ($result) ? @mysql_num_rows($result) : 0;
+            $num_rows = ($result) ? @mysqli_num_rows($result) : 0;
         } else if (!isset($num_rows)) {
-            $num_rows = @mysql_affected_rows();
+            $num_rows = @mysqli_affected_rows();
         }
 
         // Checks if the current database has changed
@@ -333,7 +333,7 @@
             $db     = $row['db'];
             $reload = 1;
         }
-        @mysql_free_result($res);
+        @mysqli_free_result($res);
         unset($res);
         unset($row);
 
@@ -357,7 +357,7 @@
         // lowercase reserved words are removed, so we have a simple split
         // pattern:
 
-            $array = split('[[:space:]]+(FROM|ORDER BY)[[:space:]]+', $sql_query);
+            $array = explode('[[:space:]]+(FROM|ORDER BY)[[:space:]]+', $sql_query);
 
         // if $array[1] is empty here, there is an error in the query:
         // "... FROM [ORDER BY ...]", but the query is already executed with
@@ -368,19 +368,19 @@
             // Special case: SELECT DISTINCT ... FROM ...
             // the count of resulting rows can be found as:
             // SELECT COUNT(DISTINCT ...) FROM ...
-                if (eregi('^SELECT DISTINCT(.*)', $array[0], $array_dist)) {
+                if (preg_match('^SELECT DISTINCT(.*)', $array[0], $array_dist)) {
                     $count_what = 'DISTINCT ' . $array_dist[1];
                 } else {
                     $count_what = '*';
                 }
                 $count_query = 'SELECT COUNT(' . $count_what . ') AS count FROM ' . $array[1];
-                if ($cnt_all_result = mysql_query($count_query)) {
+                if ($cnt_all_result = mysqli_query($count_query)) {
                     if ($is_group) {
-                        $unlim_num_rows = @mysql_num_rows($cnt_all_result);
+                        $unlim_num_rows = @mysqli_num_rows($cnt_all_result);
                     } else {
-                        $unlim_num_rows = mysql_result($cnt_all_result, 0, 'count');
+                        $unlim_num_rows = mysqli_result($cnt_all_result, 0, 'count');
                     }
-                    mysql_free_result($cnt_all_result);
+                    mysqli_free_result($cnt_all_result);
                 }
             } else {
                 $unlim_num_rows         = 0;
@@ -407,7 +407,7 @@
         }
 
         if ($is_gotofile) {
-            $goto = ereg_replace('\.\.*', '.', $goto);
+            $goto = preg_replace('\.\.*', '.', $goto);
             // Checks for a valid target script
             if (isset($table) && $table == '') {
                 unset($table);
@@ -421,7 +421,7 @@
                     $goto     = 'db_details.php';
                 } else {
                     $is_table = @PMA_mysql_query('SHOW TABLES LIKE \'' . PMA_sqlAddslashes($table, TRUE) . '\'');
-                    if (!($is_table && @mysql_numrows($is_table))) {
+                    if (!($is_table && @mysqli_numrows($is_table))) {
                         $goto = 'db_details.php';
                         unset($table);
                     }
@@ -500,7 +500,7 @@
         }
 
         PMA_displayTable($result, $disp_mode, $analyzed_sql);
-        mysql_free_result($result);
+        mysqli_free_result($result);
 
         if ($disp_mode[6] == '1' || $disp_mode[9] == '1') {
             echo "\n";
@@ -591,14 +591,14 @@
             }
             ?>
     <br /><br />
-    <?php echo $strBookmarkLabel; ?>&nbsp;:
-    <input type="hidden" name="server" value="<?php echo $server; ?>" />
-    <input type="hidden" name="goto" value="<?php echo $goto; ?>" />
-    <input type="hidden" name="fields[dbase]" value="<?php echo htmlspecialchars($db); ?>" />
-    <input type="hidden" name="fields[user]" value="<?php echo $cfg['Bookmark']['user']; ?>" />
-    <input type="hidden" name="fields[query]" value="<?php echo urlencode($sql_query); ?>" />
+    <?php echo  $strBookmarkLabel ?>&nbsp;:
+    <input type="hidden" name="server" value="<?php echo  $server ?>" />
+    <input type="hidden" name="goto" value="<?php echo  $goto ?>" />
+    <input type="hidden" name="fields[dbase]" value="<?php echo  htmlspecialchars($db) ?>" />
+    <input type="hidden" name="fields[user]" value="<?php echo  $cfg['Bookmark']['user'] ?>" />
+    <input type="hidden" name="fields[query]" value="<?php echo  urlencode($sql_query) ?>" />
     <input type="text" name="fields[label]" value="" />
-    <input type="submit" name="store_bkm" value="<?php echo $strBookmarkThis; ?>" />
+    <input type="submit" name="store_bkm" value="<?php echo  $strBookmarkThis ?>" />
 </form>
             <?php
         } // end bookmark support