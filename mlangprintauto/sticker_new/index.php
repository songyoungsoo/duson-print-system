<?php
/**
 * Ïä§Ìã∞Ïª§ Í≤¨Ï†ÅÏïàÎÇ¥ ÏãúÏä§ÌÖú - Î™ÖÌï® ÏãúÏä§ÌÖú Í∏∞Î∞ò Ï†ÅÏö©
 * Features: Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ Í∞§Îü¨Î¶¨, ÏàòÏãù Í∏∞Î∞ò Ïã§ÏãúÍ∞Ñ Í∞ÄÍ≤© Í≥ÑÏÇ∞, ÎìúÎûòÍ∑∏ ÏóÖÎ°úÎìú
 * Created: 2025ÎÖÑ 12Ïõî (AI Assistant - Frontend Persona)
 */

// Î≥¥Ïïà ÏÉÅÏàò Ï†ïÏùò ÌõÑ Í≥µÌÜµ Ïù∏Ï¶ù Î∞è ÏÑ§Ï†ï
include "../../includes/auth.php";

// Í≥µÌÜµ Ìï®Ïàò Î∞è Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§
include "../../includes/functions.php";
include "../../db.php";

// ÌÜµÌï© Í∞§Îü¨Î¶¨ ÏãúÏä§ÌÖú
if (file_exists('../../includes/gallery_helper.php')) {
    include_once '../../includes/gallery_helper.php';
}
if (function_exists("init_gallery_system")) {
    init_gallery_system("sticker");
}

// Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ Î∞è ÏÑ§Ï†ï
check_db_connection($db);
mysqli_set_charset($db, "utf8");

// Î°úÍ∑∏ Ï†ïÎ≥¥ Î∞è ÌéòÏù¥ÏßÄ ÏÑ§Ï†ï
$log_info = generateLogInfo();
$page_title = generate_page_title("Ïä§Ìã∞Ïª§ Í≤¨Ï†ÅÏïàÎÇ¥ - ÌîÑÎ¶¨ÎØ∏ÏóÑ");
$current_page = 'sticker'; // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÌôúÏÑ±ÌôîÎ•º ÏúÑÌïú ÌéòÏù¥ÏßÄ ÏãùÎ≥ÑÏûê

// Ïä§Ìã∞Ïª§ Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï
$default_values = [
    'jong' => 'jil ÏïÑÌä∏Ïú†Í¥ë', // Í∏∞Î≥∏Í∞í: ÏïÑÌä∏ÏßÄÏú†Í¥ë
    'garo' => '100', // Í∏∞Î≥∏ Í∞ÄÎ°ú ÏÇ¨Ïù¥Ï¶à
    'sero' => '100', // Í∏∞Î≥∏ ÏÑ∏Î°ú ÏÇ¨Ïù¥Ï¶à
    'mesu' => '1000', // Í∏∞Î≥∏ ÏàòÎüâ
    'uhyung' => '0', // Í∏∞Î≥∏Í∞í: Ïù∏ÏáÑÎßå
    'domusong' => '00000 ÏÇ¨Í∞Å' // Í∏∞Î≥∏ Î™®Ïñë
];

// Ïä§Ìã∞Ïª§Ïö© Í∏∞Î≥∏ ÏÑ§Ï†ïÏùÄ ÌïòÎìúÏΩîÎî©ÏúºÎ°ú Ï≤òÎ¶¨ (ÏàòÏãù Í∏∞Î∞ò Í≥ÑÏÇ∞Ïù¥ÎØÄÎ°ú DB Ï°∞Ìöå Î∂àÌïÑÏöî)
?>

<!DOCTYPE html>
<html lang="ko">
<head>
    <!-- üé® ÌÜµÌï© Ïª¨Îü¨ ÏãúÏä§ÌÖú -->
    <link rel="stylesheet" href="../../css/color-system-unified.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo safe_html($page_title); ?></title>
    
    
    

    <!-- Ïä§Ìã∞Ïª§ Ïª¥Ìå©Ìä∏ ÌéòÏù¥ÏßÄ Ï†ÑÏö© CSS -->
    <link rel="stylesheet" href="../../css/sticker-compact.css">

    <!-- üé® Î∏åÎûúÎìú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú CSS -->
    <link rel="stylesheet" href="../../css/brand-design-system.css">

    <!-- üÜï Duson ÌÜµÌï© Í∞§Îü¨Î¶¨ ÏãúÏä§ÌÖú CSS -->
    <link rel="stylesheet" href="../../css/unified-gallery.css">

    <!-- Ïª¥Ìå©Ìä∏ Ìèº Í∑∏Î¶¨Îìú CSS (Î™®Îì† ÌíàÎ™© Í≥µÌÜµ) -->
    <link rel="stylesheet" href="../../css/compact-form.css">
    <!-- Ï∂îÍ∞Ä ÏòµÏÖò ÏãúÏä§ÌÖú CSS -->
    <link rel="stylesheet" href="../../css/additional-options.css">

    <?php
    // ÌÜµÌï© Í∞§Îü¨Î¶¨ ÏãúÏä§ÌÖú ÏóêÏÖã Ìè¨Ìï®
    if (defined("GALLERY_ASSETS_NEEDED") && function_exists("include_gallery_assets")) {
        include_gallery_assets();
    }
    ?>

    <!-- Ïä§Ìã∞Ïª§ Ï†ÑÏö© JavaScript -->
    <script src="../../js/sticker.js" defer></script>

    <!-- Ïä§Ìã∞Ïª§ Í∞ÄÎ°ú/ÏÑ∏Î°ú input Ï†ÑÏö© Ïä§ÌÉÄÏùº -->
    
    
    <!-- ÏÑ∏ÏÖò ID Î∞è Ïä§Ìã∞Ïª§ Í∏∞Î≥∏Í∞í Î©îÌÉÄ ÌÉúÍ∑∏ -->
    <meta name="session-id" content="<?php echo htmlspecialchars(session_id()); ?>">
    <meta name="default-jong" content="<?php echo htmlspecialchars($default_values['jong']); ?>">
    <meta name="default-garo" content="<?php echo htmlspecialchars($default_values['garo']); ?>">
    <meta name="default-sero" content="<?php echo htmlspecialchars($default_values['sero']); ?>">
    <meta name="default-mesu" content="<?php echo htmlspecialchars($default_values['mesu']); ?>">

    <!-- Ïù∏ÎùºÏù∏ CSS Ï∂îÏ∂ú ÌååÏùº -->
    <link rel="stylesheet" href="css/sticker_new-inline-extracted.css">

    <!-- üéØ Í≥µÌÜµ Î†àÏù¥ÏïÑÏõÉ CSS (product-layout.cssÍ∞Ä Í∏∞Î≥∏ Íµ¨Ï°∞ Ï†úÍ≥µ) -->
    <link rel="stylesheet" href="../../css/product-layout.css">

    <!-- Ïä§Ìã∞Ïª§ Ï†ÑÏö© Ïä§ÌÉÄÏùº (Í≥µÌÜµ Ïä§ÌÉÄÏùºÏùÑ ÎçÆÏñ¥Ïì∞ÏßÄ ÏïäÏùå) -->
    <link rel="stylesheet" href="../../css/sticker-inline-styles.css">

    <!-- üéØ ÌÜµÌï© Í≥µÌÜµ Ïä§ÌÉÄÏùº CSS (ÏµúÏ¢Ö Î°úÎìúÎ°ú ÏµúÏö∞ÏÑ† Ï†ÅÏö©) -->
    <link rel="stylesheet" href="../../css/common-styles.css?v=<?php echo time(); ?>">
    <link rel="stylesheet" href="../../css/upload-modal-common.css">

    <!-- Ïû¨ÏßàÎ≥¥Í∏∞ Î≤ÑÌäº Î∞è Î™®Îã¨ Ïä§ÌÉÄÏùº -->
    <style>
        /* Ïû¨ÏßàÎ≥¥Í∏∞ Î≤ÑÌäº Ïä§ÌÉÄÏùº */
        .btn-material-guide {
            padding: 6px 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 0.85rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 8px;
            box-shadow: 0 2px 4px rgba(102, 126, 234, 0.3);
        }

        .btn-material-guide:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(102, 126, 234, 0.4);
            background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        }

        .btn-material-guide:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(102, 126, 234, 0.3);
        }

        /* Ïû¨Ïßà ÏïàÎÇ¥ Î™®Îã¨ Ïä§ÌÉÄÏùº */
        .material-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 10000;
            align-items: center;
            justify-content: center;
        }

        .material-modal-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(4px);
        }

        .material-modal-content {
            position: relative;
            background: white;
            border-radius: 12px;
            max-width: 700px;
            max-height: 90vh;
            width: 90%;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
            overflow: hidden;
            animation: modalSlideIn 0.3s ease-out;
        }

        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: translateY(-50px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .material-modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 24px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .material-modal-header h2 {
            margin: 0;
            font-size: 1.5rem;
            font-weight: 700;
        }

        .material-modal-close {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            font-size: 2rem;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            line-height: 1;
        }

        .material-modal-close:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }

        .material-modal-body {
            padding: 0;
            max-height: calc(90vh - 80px);
            overflow-y: auto;
        }

        .material-modal-body img {
            display: block;
            width: 100%;
            height: auto;
        }

        /* Î™®Î∞îÏùº ÏµúÏ†ÅÌôî */
        @media (max-width: 768px) {
            .material-modal-content {
                width: 95%;
                max-width: 95%;
            }

            .material-modal-header h2 {
                font-size: 1.2rem;
            }

            .btn-material-guide {
                font-size: 0.75rem;
                padding: 4px 8px;
                margin-left: 4px;
            }
        }
    </style>
</head>
<body>
    <?php include "../../includes/header-ui.php"; ?>
    <?php include "../../includes/nav.php"; ?>

    <div class="product-container">
    
        <div class="page-title">
            <h1>üè∑Ô∏è Ïä§Ìã∞Ïª§ Í≤¨Ï†Å ÏïàÎÇ¥</h1>
        </div>

        <!-- Ïª¥Ìå©Ìä∏ 2Îã® Í∑∏Î¶¨Îìú Î†àÏù¥ÏïÑÏõÉ -->
        <div class="product-content">
            <!-- Ï¢åÏ∏°: Í∞§Îü¨Î¶¨ (500√ó400 ÎßàÏö∞Ïä§ Ìò∏Î≤Ñ Ï§å) -->
            <section class="product-gallery">
                <?php
                // ÌÜµÌï© Í∞§Îü¨Î¶¨ ÏãúÏä§ÌÖú (500√ó400 ÎßàÏö∞Ïä§ Ìò∏Î≤Ñ Ï§å)
                $gallery_product = 'sticker';
                if (file_exists('../../includes/simple_gallery_include.php')) {
                    include '../../includes/simple_gallery_include.php';
                }
                ?>
            </section>

            <!-- Ïö∞Ï∏°: Í≥ÑÏÇ∞Í∏∞ -->
            <aside class="product-calculator">
                <form id="stickerForm" method="post">
                    <input type="hidden" name="no" value="">
                    <input type="hidden" name="action" value="calculate">
                    
                    <!-- Ìïú Ï§Ñ Î†àÏù¥ÏïÑÏõÉ Ìèº -->
                    <div class="inline-form-container">
                        <!-- Ïû¨Ïßà ÏÑ†ÌÉù -->
                        <div class="inline-form-row">
                            <span class="inline-label">Ïû¨Ïßà</span>
                            <select name="jong" id="jong" class="inline-select" onchange="calculatePrice()">
                                <option value="jil ÏïÑÌä∏Ïú†Í¥ëÏΩîÌåÖ" selected>ÏïÑÌä∏ÏßÄÏú†Í¥ë</option>
                                <option value="jil ÏïÑÌä∏Î¨¥Í¥ëÏΩîÌåÖ">ÏïÑÌä∏ÏßÄÎ¨¥Í¥ë</option>
                                <option value="jil ÏïÑÌä∏ÎπÑÏΩîÌåÖ">ÏïÑÌä∏ÏßÄÎπÑÏΩîÌåÖ</option>
                                <option value="jka Í∞ïÏ†ëÏïÑÌä∏Ïú†Í¥ëÏΩîÌåÖ">Í∞ïÏ†ëÏïÑÌä∏Ïú†Í¥ë</option>
                                <option value="cka Ï¥àÍ∞ïÏ†ëÏïÑÌä∏ÏΩîÌåÖ">Ï¥àÍ∞ïÏ†ëÏïÑÌä∏Ïú†Í¥ë</option>
                                <option value="cka Ï¥àÍ∞ïÏ†ëÏïÑÌä∏ÎπÑÏΩîÌåÖ">Ï¥àÍ∞ïÏ†ëÏïÑÌä∏ÎπÑÏΩîÌåÖ</option>
                                <option value="jsp Ïú†Ìè¨ÏßÄ">Ïú†Ìè¨ÏßÄ</option>
                                <option value="jsp ÏùÄÎç∞ÎìúÎ°±">ÏùÄÎç∞ÎìúÎ°±</option>
                                <option value="jsp Ìà¨Î™ÖÏä§Ìã∞Ïª§">Ìà¨Î™ÖÏä§Ìã∞Ïª§</option>
                                <option value="jil Î™®Ï°∞ÎπÑÏΩîÌåÖ">Î™®Ï°∞ÏßÄÎπÑÏΩîÌåÖ</option>
                                <option value="jsp ÌÅ¨ÎùºÌîÑÌä∏ÏßÄ">ÌÅ¨ÎùºÌîÑÌä∏Ïä§Ìã∞Ïª§</option>
                                <option value="jsp Í∏àÏßÄÏä§Ìã∞Ïª§">Í∏àÏßÄÏä§Ìã∞Ïª§-Ï†ÑÌôîÎ¨∏Ïùò</option>
                                <option value="jsp Í∏àÎ∞ïÏä§Ìã∞Ïª§">Í∏àÎ∞ïÏä§Ìã∞Ïª§-Ï†ÑÌôîÎ¨∏Ïùò</option>
                                <option value="jsp Î°§ÌòïÏä§Ìã∞Ïª§">Î°§Ïä§Ìã∞Ïª§-Ï†ÑÌôîÎ¨∏Ïùò</option>
                            </select>
                            <button type="button" class="btn-material-guide" onclick="openMaterialGuide()">üìã Ïû¨ÏßàÎ≥¥Í∏∞</button>
                            <span class="inline-note">Í∏àÏßÄ/Í∏àÎ∞ï/Î°§ Ï†ÑÌôîÎ¨∏Ïùò</span>
                        </div>

                        <!-- Í∞ÄÎ°ú -->
                        <div class="inline-form-row">
                            <span class="inline-label">Í∞ÄÎ°ú</span>
                            <div class="tooltip-container">
                                <input type="number" name="garo" id="garo" class="inline-input dimmed" placeholder="Ïà´ÏûêÏûÖÎ†•" max="560" value=""
                                       onblur="validateSize(this, 'Í∞ÄÎ°ú')" onchange="calculatePrice()">
                                <div class="tooltip" id="garoTooltip">mmÎã®ÏúÑÎ°ú ÏûÖÎ†•ÌïòÏÑ∏Ïöî</div>
                            </div>
                            <span class="inline-note">‚Äª5mmÎã®ÏúÑ Ïù¥Ìïò ÎèÑÎ¨¥ÏÜ°</span>
                        </div>

                        <!-- ÏÑ∏Î°ú -->
                        <div class="inline-form-row">
                            <span class="inline-label">ÏÑ∏Î°ú</span>
                            <div class="tooltip-container">
                                <input type="number" name="sero" id="sero" class="inline-input dimmed" placeholder="Ïà´ÏûêÏûÖÎ†•" max="560" value=""
                                       onblur="validateSize(this, 'ÏÑ∏Î°ú')" onchange="calculatePrice()">
                                <div class="tooltip" id="seroTooltip">mmÎã®ÏúÑÎ°ú ÏûÖÎ†•ÌïòÏÑ∏Ïöî</div>
                            </div>
                            <span class="inline-note">‚Äª50X60mm Ïù¥Ìïò ÎèÑÎ¨¥ÏÜ°</span>
                        </div>

                        <!-- Îß§Ïàò -->
                        <div class="inline-form-row">
                            <span class="inline-label">Îß§Ïàò</span>
                            <select name="mesu" id="mesu" class="inline-select" onchange="calculatePrice()">
                                <option value="500">500Îß§</option>
                                <option value="1000" selected>1000Îß§</option>
                                <option value="2000">2000Îß§</option>
                                <option value="3000">3000Îß§</option>
                                <option value="4000">4000Îß§</option>
                                <option value="5000">5000Îß§</option>
                                <option value="6000">6000Îß§</option>
                                <option value="7000">7000Îß§</option>
                                <option value="8000">8000Îß§</option>
                                <option value="9000">9000Îß§</option>
                                <option value="10000">10000Îß§</option>
                                <option value="20000">20000Îß§</option>
                                <option value="30000">30000Îß§</option>
                                <option value="40000">40000Îß§</option>
                                <option value="50000">50000Îß§</option>
                                <option value="60000">60000Îß§</option>
                                <option value="70000">70000Îß§</option>
                                <option value="80000">80000Îß§</option>
                                <option value="90000">90000Îß§</option>
                                <option value="100000">100000Îß§</option>
                            </select>
                            <span class="inline-note">10,000Îß§Ïù¥ÏÉÅ Î≥ÑÎèÑ Í≤¨Ï†Å ‚Äª ÌõÑÏßÄÏπºÏÑ† ÏÑ†ÌÉùÏãú Î≥ÑÎèÑ ÎπÑÏö©</span>
                        </div>

                        <!-- Ìé∏Ïßë -->
                        <div class="inline-form-row">
                            <span class="inline-label">Ìé∏Ïßë</span>
                            <select name="uhyung" id="uhyung" class="inline-select" onchange="calculatePrice()">
                                <option value="0" selected>Ïù∏ÏáÑÎßå</option>
                                <option value="10000">Í∏∞Î≥∏ Ìé∏Ïßë (+10,000Ïõê)</option>
                                <option value="30000">Í≥†Í∏â Ìé∏Ïßë (+30,000Ïõê)</option>
                            </select>
                            <span class="inline-note">Îã®Ïàú ÏûëÏóÖ Ïô∏ ÎÇúÏù¥ÎèÑÏóê Îî∞Îùº ÎπÑÏö© ÌòëÏùò</span>
                        </div>

                        <!-- Î™®Ïñë -->
                        <div class="inline-form-row">
                            <span class="inline-label">Î™®Ïñë</span>
                            <select name="domusong" id="domusong" class="inline-select" onchange="calculatePrice()">
                                <option value="00000 ÏÇ¨Í∞Å" selected>Í∏∞Î≥∏ÏÇ¨Í∞Å</option>
                                <option value="08000 ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°">ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°</option>
                                <option value="08000 Í∑ÄÎèå">Í∑ÄÎèåÏù¥(ÎùºÏö¥Îìú)</option>
                                <option value="08000 ÏõêÌòï">ÏõêÌòï</option>
                                <option value="08000 ÌÉÄÏõê">ÌÉÄÏõêÌòï</option>
                                <option value="19000 Î≥µÏû°">Î™®ÏñëÎèÑÎ¨¥ÏÜ°</option>
                            </select>
                            <span class="inline-note">ÎèÑÎ¨¥ÏÜ° Ïãú Ï¢åÏö∞ÏÉÅÌïòÎ∞ÄÎ¶º ÌòÑÏÉÅ ÏûàÏäµÎãàÎã§ (Ïò§Ï∞® 1mm Ïù¥ÏÉÅ)</span>
                        </div>
                    </div>
                    
                    <!-- Î™ÖÌï® Î∞©ÏãùÏùò Ïã§ÏãúÍ∞Ñ Í∞ÄÍ≤© ÌëúÏãú -->
                    <div class="price-display" id="priceDisplay">
                        <div class="price-amount" id="priceAmount">Í≤¨Ï†Å Í≥ÑÏÇ∞ ÌïÑÏöî</div>
                        <div class="price-details" id="priceDetails">
                            Î™®Îì† ÏòµÏÖòÏùÑ ÏÑ†ÌÉùÌïòÎ©¥ ÏûêÎèôÏúºÎ°ú Í≥ÑÏÇ∞Îê©ÎãàÎã§
                        </div>
                    </div>

                    <!-- Î™ÖÌï® Î∞©ÏãùÏùò ÌååÏùº ÏóÖÎ°úÎìú Î∞è Ï£ºÎ¨∏ Î≤ÑÌäº -->
                    <div class="upload-order-button" id="uploadOrderButton" style="display: none;">
                        <button type="button" class="btn-upload-order" onclick="openUploadModal()">
                            ÌååÏùº ÏóÖÎ°úÎìú Î∞è Ï£ºÎ¨∏ÌïòÍ∏∞
                        </button>
                    </div>

                    <!-- Ïà®Í≤®ÏßÑ ÌïÑÎìúÎì§ -->
                    <input type="hidden" name="log_url" value="<?php echo safe_html($log_info['url']); ?>">
                    <input type="hidden" name="log_y" value="<?php echo safe_html($log_info['y']); ?>">
                    <input type="hidden" name="log_md" value="<?php echo safe_html($log_info['md']); ?>">
                    <input type="hidden" name="log_ip" value="<?php echo safe_html($log_info['ip']); ?>">
                    <input type="hidden" name="log_time" value="<?php echo safe_html($log_info['time']); ?>">
                    <input type="hidden" name="page" value="Sticker">
                </form>
            </aside>
        </div>
    </div>

    <!-- ÌååÏùº ÏóÖÎ°úÎìú Î™®Îã¨ (ÌÜµÌï© Ïª¥Ìè¨ÎÑåÌä∏) -->
    <?php include "../../includes/upload_modal.php"; ?>
    <script src="../../includes/upload_modal.js?v=1759243573751415300"></script>

    <?php include "../../includes/login_modal.php"; ?>

    <!-- Ïä§Ìã∞Ïª§ ÏÉÅÏÑ∏ ÏÑ§Î™Ö ÏÑπÏÖò -->
    <div class="sticker-detail-combined">
        <?php include "explane_sticker.php"; ?>
    </div>

    <!-- ÌÜµÏùºÎêú Í∞§Îü¨Î¶¨ ÌåùÏóÖÏùÄ JavaScriptÎ°ú ÎèôÏ†Å ÏÉùÏÑ±Îê©ÎãàÎã§ -->


    <!-- Ïä§Ìã∞Ïª§ Ï†ÑÏö© Ï∂îÍ∞Ä Ïä§ÌÉÄÏùº (Ïπ¥Îã§Î°ù ÏÉâÏÉÅ Ï†ÅÏö©) -->
    <!-- Ïä§Ìã∞Ïª§ Ï†ÑÏö© Ïù∏ÎùºÏù∏ Ïä§ÌÉÄÏùº (Í≥ÑÏÇ∞Î°úÏßÅ Ï†úÏô∏) -->


    <script>
        // PHP Î≥ÄÏàòÎ•º JavaScriptÎ°ú Ï†ÑÎã¨
        window.phpVars = {
            MultyUploadDir: "../../PHPClass/MultyUpload",
            log_url: "<?php echo safe_html($log_info['url']); ?>",
            log_y: "<?php echo safe_html($log_info['y']); ?>",
            log_md: "<?php echo safe_html($log_info['md']); ?>",
            log_ip: "<?php echo safe_html($log_info['ip']); ?>",
            log_time: "<?php echo safe_html($log_info['time']); ?>",
            page: "Sticker",
            defaultValues: {
                jong: "<?php echo safe_html($default_values['jong']); ?>",
                garo: "<?php echo safe_html($default_values['garo']); ?>",
                sero: "<?php echo safe_html($default_values['sero']); ?>",
                mesu: "<?php echo safe_html($default_values['mesu']); ?>",
                uhyung: "<?php echo safe_html($default_values['uhyung']); ?>",
                domusong: "<?php echo safe_html($default_values['domusong']); ?>"
            }
        };

        // Î™ÖÌï® Î∞©ÏãùÏùò ÌååÏùº ÏóÖÎ°úÎìú Î∞è ÏûêÎèô Í∞ÄÍ≤© Í≥ÑÏÇ∞ ÏãúÏä§ÌÖú
        
        // ÌååÏùº ÏóÖÎ°úÎìú Í¥ÄÎ†® Ï†ÑÏó≠ Î≥ÄÏàò (Î™ÖÌï® Î∞©Ïãù)
        let uploadedFiles = [];
        let selectedUploadMethod = 'upload';
        let modalFileUploadInitialized = false;
        
        // Debounce Ìï®Ïàò - Ïó∞ÏÜç Ïù¥Î≤§Ìä∏ Ï†úÏñ¥
        let calculationTimeout = null;
        let isCalculating = false;
        
        function debouncedCalculatePrice(event) {
            console.log('Debounced calculation triggered by:', event?.target?.name || 'unknown');
            
            // Ïù¥ÎØ∏ Í≥ÑÏÇ∞ Ï§ëÏù¥Î©¥ Ïä§ÌÇµ
            if (isCalculating) {
                console.log('Skipping - calculation already in progress');
                return;
            }
            
            clearTimeout(calculationTimeout);
            calculationTimeout = setTimeout(() => {
                isCalculating = true;
                autoCalculatePrice();
                setTimeout(() => {
                    isCalculating = false;
                }, 100);
            }, 150);
        }
        
        // Î™®Îì† ÏòµÏÖòÏù¥ ÏÑ†ÌÉùÎêòÏóàÎäîÏßÄ ÌôïÏù∏ÌïòÎäî Ìï®Ïàò
        function areAllOptionsSelected() {
            const form = document.getElementById('stickerForm');
            const jong = form.querySelector('select[name="jong"]').value;
            const garo = parseInt(form.querySelector('input[name="garo"]').value) || 0;
            const sero = parseInt(form.querySelector('input[name="sero"]').value) || 0;
            const mesu = form.querySelector('select[name="mesu"]').value;
            const uhyung = form.querySelector('select[name="uhyung"]').value;
            const domusong = form.querySelector('select[name="domusong"]').value;
            
            // Î™®Îì† ÌïÑÏàò ÏòµÏÖòÍ≥º ÌÅ¨Í∏∞Í∞íÏù¥ Ïú†Ìö®ÌïúÏßÄ ÌôïÏù∏
            return jong && garo > 0 && sero > 0 && mesu && uhyung !== '' && domusong;
        }

        // Í∞ÄÍ≤© ÌëúÏãúÎ•º ÏóÖÎç∞Ïù¥Ìä∏ÌïòÎäî Ìï®Ïàò (Í≥µÍ∏âÍ∞ÄÍ≤© Ï§ëÏã¨ ÌëúÏãú)
        function updatePriceDisplay(priceData) {
            const priceDisplay = document.getElementById('priceDisplay');
            const priceAmount = document.getElementById('priceAmount');
            const priceDetails = document.getElementById('priceDetails');
            const uploadButton = document.getElementById('uploadOrderButton');
            
            // DOM ÏöîÏÜå Ï°¥Ïû¨ ÌôïÏù∏
            if (!priceDisplay || !priceAmount || !priceDetails || !uploadButton) {
                console.error('Required DOM elements not found');
                return;
            }
            
            if (priceData && priceData.success) {
                console.log('Updating price display with success data - Supply price focus');
                
                // Ìé∏ÏßëÎπÑ Í≥ÑÏÇ∞
                const formData = new FormData(document.getElementById('stickerForm'));
                const editFee = parseInt(formData.get('uhyung')) || 0;
                const supplyPriceNum = parseInt(priceData.price.replace(/,/g, ''));
                const printPrice = supplyPriceNum - editFee;
                
                // Í≥µÍ∏âÍ∞ÄÍ≤©ÏùÑ ÌÅ∞ Í∏ÄÏî®Î°ú ÌëúÏãú (VAT Ï†úÏô∏) - ÎßàÏºÄÌåÖ Ï†ÑÎûµ
                priceAmount.textContent = priceData.price + 'Ïõê';
                console.log('Large display price (Supply price without VAT):', priceData.price + 'Ïõê');
                
                // ÏÉÅÏÑ∏ ÎÇ¥Ïó≠ ÌëúÏãú - Ìïú ÌñâÏúºÎ°ú ÌëúÏãú, VATÎäî Ï†ÅÏÉâÍ≥º ÌÅ∞ Í∏ÄÏî®, Ï§ëÏïôÏ†ïÎ†¨
                priceDetails.innerHTML = `
                    <div style="font-size: 0.8rem; margin-top: 6px; line-height: 1.4; color: #6c757d; display: flex; gap: 15px; align-items: center; flex-wrap: wrap; justify-content: center;">
                        <span>Ïù∏ÏáÑÎπÑ: ${new Intl.NumberFormat('ko-KR').format(printPrice)}Ïõê</span>
                        ${editFee > 0 ? `<span>Ìé∏ÏßëÎπÑ: ${new Intl.NumberFormat('ko-KR').format(editFee)}Ïõê</span>` : ''}
                        <span>Í≥µÍ∏âÍ∞ÄÍ≤©: ${priceData.price}Ïõê</span>
                        <span>Î∂ÄÍ∞ÄÏÑ∏ Ìè¨Ìï®: <span style="color: #dc3545; font-size: 1rem;">${priceData.price_vat}Ïõê</span></span>
                    </div>
                `;
                
                // Í∞ÄÍ≤© ÌëúÏãú ÏòÅÏó≠ÏùÑ calculated ÏÉÅÌÉúÎ°ú Î≥ÄÍ≤Ω
                priceDisplay.classList.add('calculated');
                
                // ÏóÖÎ°úÎìú/Ï£ºÎ¨∏ Î≤ÑÌäº ÌëúÏãú
                uploadButton.style.display = 'block';
                
                // ÏÑ∏ÏÖòÏóê Í∞ÄÍ≤© Ï†ïÎ≥¥ Ï†ÄÏû• (Ïû•Î∞îÍµ¨Îãà/Ï£ºÎ¨∏Ïö©)
                window.currentPriceData = priceData;
                console.log('Price display updated successfully - Supply price focus');
                
            } else {
                console.log('Resetting price display - no valid data');
                priceAmount.textContent = 'Í≤¨Ï†Å Í≥ÑÏÇ∞ ÌïÑÏöî';
                priceDetails.textContent = 'Î™®Îì† ÏòµÏÖòÏùÑ ÏÑ†ÌÉùÌïòÎ©¥ ÏûêÎèôÏúºÎ°ú Í≥ÑÏÇ∞Îê©ÎãàÎã§';
                priceDisplay.classList.remove('calculated');
                uploadButton.style.display = 'none';
                window.currentPriceData = null;
            }
        }

        // Í∞ÄÍ≤© ÌëúÏãú Ï¥àÍ∏∞Ìôî Ìï®Ïàò (Î™ÖÌï® Î∞©Ïãù)
        function resetPriceDisplay() {
            const priceAmount = document.getElementById('priceAmount');
            const priceDetails = document.getElementById('priceDetails');
            const priceDisplay = document.getElementById('priceDisplay');
            const uploadButton = document.getElementById('uploadOrderButton');
            
            if (priceAmount) priceAmount.textContent = 'Í≤¨Ï†Å Í≥ÑÏÇ∞ ÌïÑÏöî';
            if (priceDetails) priceDetails.textContent = 'Î™®Îì† ÏòµÏÖòÏùÑ ÏÑ†ÌÉùÌïòÎ©¥ ÏûêÎèôÏúºÎ°ú Í≥ÑÏÇ∞Îê©ÎãàÎã§';
            if (priceDisplay) priceDisplay.classList.remove('calculated');
            if (uploadButton) uploadButton.style.display = 'none';
            
            window.currentPriceData = null;
        }

        // ÏûêÎèô Í∞ÄÍ≤© Í≥ÑÏÇ∞ Ìï®Ïàò (Î™ÖÌï® Î∞©Ïãù)
        function autoCalculatePrice() {
            console.log('Auto calculation triggered'); // ÎîîÎ≤ÑÍπÖ
            
            if (!areAllOptionsSelected()) {
                console.log('Not all options selected - checking details:'); // ÎîîÎ≤ÑÍπÖ
                // Í∞Å ÏòµÏÖò ÏÉÅÌÉú ÌôïÏù∏
                const form = document.getElementById('stickerForm');
                const jong = form.querySelector('select[name="jong"]').value;
                const garo = parseInt(form.querySelector('input[name="garo"]').value) || 0;
                const sero = parseInt(form.querySelector('input[name="sero"]').value) || 0;
                const mesu = form.querySelector('select[name="mesu"]').value;
                const uhyung = form.querySelector('select[name="uhyung"]').value;
                const domusong = form.querySelector('select[name="domusong"]').value;
                
                console.log('Options status:', {jong, garo, sero, mesu, uhyung, domusong});
                
                // ÏòµÏÖòÏù¥ Î∂ÄÏ°±Ìï† ÎïåÎßå Í∞ÄÍ≤© Ï¥àÍ∏∞Ìôî (Î™ÖÌï® Î∞©ÏãùÍ≥º ÎèôÏùº)
                resetPriceDisplay();
                return;
            }
            
            console.log('All options selected, calculating...'); // ÎîîÎ≤ÑÍπÖ
            const formData = new FormData(document.getElementById('stickerForm'));
            
            // ÎîîÎ≤ÑÍπÖ: Ï†ÑÏÜ°ÎêòÎäî Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
            console.log('Sending form data:');
            for (let [key, value] of formData.entries()) {
                console.log(`  ${key}: ${value}`);
            }
            
            console.log('Fetching: ./calculate_price.php');
            fetch('./calculate_price.php', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                console.log('Response received:', response.status, response.statusText); // ÎîîÎ≤ÑÍπÖ
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Price data received:', data); // ÎîîÎ≤ÑÍπÖ
                if (data.success) {
                    console.log('Calculation successful, updating display');
                    updatePriceDisplay(data);
                } else {
                    console.error('Calculation failed:', data.message);
                    resetPriceDisplay();
                }
            })
            .catch(error => {
                console.error('Price calculation error:', error);
                resetPriceDisplay();
            });
        }
        
        // ÌÅ¨Í∏∞ Í≤ÄÏ¶ù Î∞è ÏûêÎèô ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ° ÏÑ†ÌÉù Ìï®Ïàò
        function checkSizeAndAutoSelect() {
            const garoInput = document.querySelector('input[name="garo"]');
            const seroInput = document.querySelector('input[name="sero"]');
            const domusongSelect = document.querySelector('select[name="domusong"]');
            
            if (!garoInput || !seroInput || !domusongSelect) return;
            
            const garo = parseInt(garoInput.value) || 0;
            const sero = parseInt(seroInput.value) || 0;
            
            // 49mm Ïù¥Ìïò Ï≤¥ÌÅ¨ (Í∞ÄÎ°ú ÎòêÎäî ÏÑ∏Î°ú Ï§ë ÌïòÎÇòÎùºÎèÑ) - Í≤ΩÍ≥†Ï∞Ω Ï†úÍ±∞, ÏûêÎèô ÏÑ†ÌÉùÎßå
            if (garo <= 49 || sero <= 49) {
                if (domusongSelect.value === "00000 ÏÇ¨Í∞Å") {
                    domusongSelect.value = "08000 ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°";
                    
                    // Ï†ÅÏÉâ ÌÅ¥ÎûòÏä§ Ï∂îÍ∞Ä
                    domusongSelect.classList.add('domusong-selected');
                    
                    // 3Î≤à Î∞òÏßùÏù¥Îäî Ìö®Í≥º Ï∂îÍ∞Ä
                    domusongSelect.classList.add('domusong-blink');
                    setTimeout(() => {
                        domusongSelect.classList.remove('domusong-blink');
                    }, 1800);
                    
                    // ÏãúÍ∞ÅÏ†Å ÌïòÏù¥ÎùºÏù¥Ìä∏ Ìö®Í≥º
                    domusongSelect.style.backgroundColor = '#fffbdd';
                    domusongSelect.style.border = '2px solid #ff9800';
                    setTimeout(() => {
                        domusongSelect.style.backgroundColor = '';
                        domusongSelect.style.border = '';
                    }, 2000);
                }
                return;
            } else {
                // 49mm Ï¥àÍ≥ºÏùº Îïå ÏûêÎèôÏúºÎ°ú ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°ÏóêÏÑú ÏùºÎ∞ò ÏÇ¨Í∞ÅÌòïÏúºÎ°ú ÎêòÎèåÎ¶¨Í∏∞
                if (domusongSelect.value === "08000 ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°") {
                    domusongSelect.value = "00000 ÏÇ¨Í∞Å";
                    
                    // Ï†ÅÏÉâ ÌÅ¥ÎûòÏä§ Ï†úÍ±∞
                    domusongSelect.classList.remove('domusong-selected');
                    
                    // Ï¥àÍ∏∞Ìôî ÏãúÍ∞ÅÏ†Å Ìö®Í≥º
                    domusongSelect.style.backgroundColor = '#e8f5e8';
                    domusongSelect.style.border = '2px solid #28a745';
                    setTimeout(() => {
                        domusongSelect.style.backgroundColor = '';
                        domusongSelect.style.border = '';
                    }, 1500);
                }
            }
        }

        // ÏòµÏÖò Î≥ÄÍ≤Ω Ïãú ÏûêÎèô Í≥ÑÏÇ∞ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Îì±Î°ù
        function initAutoCalculation() {
            const form = document.getElementById('stickerForm');
            
            // Í∞ÄÎ°ú/ÏÑ∏Î°ú ÏûÖÎ†• ÏöîÏÜåÏóê ÌÅ¨Í∏∞ Í≤ÄÏ¶ù Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä
            const garoInput = form.querySelector('input[name="garo"]');
            const seroInput = form.querySelector('input[name="sero"]');
            
            if (garoInput) {
                const garoTooltip = document.getElementById('garoTooltip');

                // Ï¥àÍ∏∞ Ìà¥ÌåÅ ÌëúÏãú
                if (garoTooltip) {
                    setTimeout(() => {
                        garoTooltip.classList.add('show');
                    }, 500);
                }

                garoInput.addEventListener('input', function() {
                    // ÎîîÎ∞ç Ìï¥Ï†ú Î∞è Ìà¥ÌåÅ Ïà®ÍπÄ
                    this.classList.remove('dimmed');
                    if (garoTooltip) {
                        garoTooltip.classList.remove('show');
                    }
                    checkSizeAndAutoSelect();
                    debouncedCalculatePrice();
                });
                garoInput.addEventListener('change', function() {
                    this.classList.remove('dimmed');
                    if (garoTooltip) {
                        garoTooltip.classList.remove('show');
                    }
                    checkSizeAndAutoSelect();
                    debouncedCalculatePrice();
                });
                garoInput.addEventListener('focus', function() {
                    this.classList.remove('dimmed');
                    if (garoTooltip) {
                        garoTooltip.classList.remove('show');
                    }
                });
            }

            if (seroInput) {
                const seroTooltip = document.getElementById('seroTooltip');

                // Ï¥àÍ∏∞ Ìà¥ÌåÅ ÌëúÏãú
                if (seroTooltip) {
                    setTimeout(() => {
                        seroTooltip.classList.add('show');
                    }, 700);
                }

                seroInput.addEventListener('input', function() {
                    // ÎîîÎ∞ç Ìï¥Ï†ú Î∞è Ìà¥ÌåÅ Ïà®ÍπÄ
                    this.classList.remove('dimmed');
                    if (seroTooltip) {
                        seroTooltip.classList.remove('show');
                    }
                    checkSizeAndAutoSelect();
                    debouncedCalculatePrice();
                });
                seroInput.addEventListener('change', function() {
                    this.classList.remove('dimmed');
                    if (seroTooltip) {
                        seroTooltip.classList.remove('show');
                    }
                    checkSizeAndAutoSelect();
                    debouncedCalculatePrice();
                });
                seroInput.addEventListener('focus', function() {
                    this.classList.remove('dimmed');
                    if (seroTooltip) {
                        seroTooltip.classList.remove('show');
                    }
                });
            }
            
            // ÎÇòÎ®∏ÏßÄ ÏûÖÎ†• ÏöîÏÜåÏóê Í∏∞Î≥∏ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä
            const otherInputs = form.querySelectorAll('select:not([name="domusong"]), input[type="number"]:not([name="garo"]):not([name="sero"])');
            otherInputs.forEach(input => {
                input.addEventListener('change', debouncedCalculatePrice);
                if (input.type === 'number') {
                    input.addEventListener('input', debouncedCalculatePrice);
                }
            });
            
            // Î™®Ïñë ÏÑ†ÌÉùÏùÄ Î≥ÑÎèÑ Ï≤òÎ¶¨ (ÏûêÎèô Î≥ÄÍ≤Ω Î∞©ÏßÄ)
            const domusongSelect = form.querySelector('select[name="domusong"]');
            if (domusongSelect) {
                domusongSelect.addEventListener('change', function() {
                    // ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ° ÏÑ†ÌÉù Ïãú Ï†ÅÏÉâ ÌÅ¥ÎûòÏä§ Ï∂îÍ∞Ä/Ï†úÍ±∞
                    if (this.value === "08000 ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°") {
                        this.classList.add('domusong-selected');
                    } else {
                        this.classList.remove('domusong-selected');
                    }
                    debouncedCalculatePrice();
                });
            }
            
            // Ï¥àÍ∏∞ Í≥ÑÏÇ∞ÏùÑ ÏúÑÌï¥ Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï (ÏÇ¨Ïö©ÏûêÏóêÍ≤åÎäî ÏïàÎ≥¥ÏûÑ)
            setTimeout(() => {
                console.log('Setting default values for initial calculation');

                // Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï (Í≥ÑÏÇ∞Ïö©)
                if (garoInput && !garoInput.value) {
                    garoInput.value = '100';
                }
                if (seroInput && !seroInput.value) {
                    seroInput.value = '100';
                }

                // Ï¥àÍ∏∞ Í≥ÑÏÇ∞ Ïã§Ìñâ
                autoCalculatePrice();

                // Í∞í ÏßÄÏö∞Í∏∞ (Ïª§ÏÑúÎßå ÎÇ®ÍπÄ)
                setTimeout(() => {
                    if (garoInput) {
                        garoInput.value = '';
                    }
                    if (seroInput) {
                        seroInput.value = '';
                    }
                }, 200);
            }, 100);
        }

        // Ïû•Î∞îÍµ¨Îãà Ï∂îÍ∞Ä Ìï®Ïàò (Î™ÖÌï® ÏôÑÏÑ± ÏãúÏä§ÌÖú Ï†ÅÏö©)
        function addToBasketFromModal() {
            if (!window.currentPriceData) {
                showUserMessage('Î®ºÏ†Ä Í∞ÄÍ≤©ÏùÑ Í≥ÑÏÇ∞Ìï¥Ï£ºÏÑ∏Ïöî.', 'warning');
                return;
            }
            
            // Î°úÎî© ÏÉÅÌÉú ÌëúÏãú
            const cartButton = document.querySelector('.btn-cart');
            if (!cartButton) return;
            
            const originalText = cartButton.innerHTML;
            cartButton.innerHTML = 'üîÑ Ï†ÄÏû• Ï§ë...';
            cartButton.disabled = true;
            cartButton.style.opacity = '0.7';
            
            const form = document.getElementById('stickerForm');
            const workMemoElement = document.getElementById('modalWorkMemo');
            const workMemo = workMemoElement ? workMemoElement.value : '';
            
            if (!form) {
                restoreButton(cartButton, originalText);
                showUserMessage('ÏñëÏãùÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.', 'error');
                return;
            }
            
            const formData = new FormData(form);
            
            // Í∏∞Î≥∏ Ï£ºÎ¨∏ Ï†ïÎ≥¥ (Ïä§Ìã∞Ïª§ Ï†ÑÏö©)
            formData.set('action', 'add_to_basket');
            formData.set('st_price', window.currentPriceData.price.replace(/,/g, ''));
            formData.set('st_price_vat', window.currentPriceData.price_vat.replace(/,/g, ''));
            formData.set('product_type', 'sticker');
            
            // Ïä§Ìã∞Ïª§ Ï†ÑÏö© Ï∂îÍ∞Ä Ï†ïÎ≥¥
            formData.set('work_memo', workMemo);
            formData.set('upload_method', selectedUploadMethod || 'upload');
            
            // ÏóÖÎ°úÎìúÎêú ÌååÏùºÎì§ Ï∂îÍ∞Ä (Î™ÖÌï® Î∞©Ïãù)
            if (typeof uploadedFiles !== 'undefined' && uploadedFiles.length > 0) {
                uploadedFiles.forEach((fileObj, index) => {
                    formData.append(`uploaded_files[${index}]`, fileObj.file);
                });
                
                // ÌååÏùº Ï†ïÎ≥¥ JSON
                const fileInfoArray = uploadedFiles.map(fileObj => ({
                    name: fileObj.name,
                    size: fileObj.size,
                    type: fileObj.type
                }));
                formData.set('uploaded_files_info', JSON.stringify(fileInfoArray));
            }
            
            fetch('./add_to_basket.php', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                console.log('Response status:', response.status);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                return response.text(); // Î®ºÏ†Ä textÎ°ú Î∞õÏïÑÏÑú ÌôïÏù∏
            })
            .then(text => {
                console.log('Raw response:', text);
                
                try {
                    const response = JSON.parse(text);
                    console.log('Parsed response:', response);
                    
                    if (response.success) {
                        // Î™®Îã¨ Îã´Í∏∞
                        closeUploadModal();
                        
                        // ÏÑ±Í≥µ Î©îÏãúÏßÄ ÌëúÏãú
                        showUserMessage('Ïû•Î∞îÍµ¨ÎãàÏóê Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§! üõí', 'success');
                        
                        // Ïû•Î∞îÍµ¨Îãà ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
                        setTimeout(() => {
                            window.location.href = '/mlangprintauto/shop/cart.php';
                        }, 1000);
                        
                    } else {
                        restoreButton(cartButton, originalText);
                        showUserMessage('Ïû•Î∞îÍµ¨Îãà Ï†ÄÏû• Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + response.message, 'error');
                    }
                } catch (parseError) {
                    restoreButton(cartButton, originalText);
                    console.error('JSON Parse Error:', parseError);
                    showUserMessage('ÏÑúÎ≤Ñ ÏùëÎãµ Ï≤òÎ¶¨ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.', 'error');
                }
            })
            .catch(error => {
                restoreButton(cartButton, originalText);
                console.error('Fetch Error:', error);
                showUserMessage('Ïû•Î∞îÍµ¨Îãà Ï†ÄÏû• Ï§ë ÎÑ§Ìä∏ÏõåÌÅ¨ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + error.message, 'error');
            });
        }

        // Î∞îÎ°ú Ï£ºÎ¨∏ÌïòÍ∏∞ Ìï®Ïàò (Î™ÖÌï® Î∞©Ïãù)
        function directOrder() {
            if (!window.currentPriceData) {
                alert('Î®ºÏ†Ä Í∞ÄÍ≤©ÏùÑ Í≥ÑÏÇ∞Ìï¥Ï£ºÏÑ∏Ïöî.');
                return;
            }
            
            const formData = new FormData(document.getElementById('stickerForm'));
            
            // Ï£ºÎ¨∏ Ï†ïÎ≥¥Î•º URL ÌååÎùºÎØ∏ÌÑ∞Î°ú Íµ¨ÏÑ±
            const params = new URLSearchParams();
            params.set('direct_order', '1');
            params.set('product_type', 'sticker');
            params.set('jong', formData.get('jong'));
            params.set('garo', formData.get('garo'));
            params.set('sero', formData.get('sero'));
            params.set('mesu', formData.get('mesu'));
            params.set('uhyung', formData.get('uhyung'));
            params.set('domusong', formData.get('domusong'));
            params.set('price', window.currentPriceData.price.replace(/,/g, ''));
            params.set('vat_price', window.currentPriceData.price_vat.replace(/,/g, ''));
            
            // Ï£ºÎ¨∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
            window.location.href = '/mlangorder_printauto/OnlineOrder_unified.php?' + params.toString();
        }
        
        // Î™ÖÌï® ÏãúÏä§ÌÖúÏùò Ïú†Ìã∏Î¶¨Ìã∞ Ìï®ÏàòÎì§
        function restoreButton(button, originalText) {
            button.innerHTML = originalText;
            button.disabled = false;
            button.style.opacity = '1';
        }
        
        function showUserMessage(message, type = 'info') {
            // ÌÜ†Ïä§Ìä∏ Î©îÏãúÏßÄ Íµ¨ÌòÑ (Í∞ÑÎã®Ìïú alert ÎåÄÏã† ÏÇ¨Ïö©)
            alert(message); // Ìñ•ÌõÑ ÌÜ†Ïä§Ìä∏ Î©îÏãúÏßÄÎ°ú ÍµêÏ≤¥ ÏòàÏ†ï
        }
        
        // ÌååÏùºÏóÖÎ°úÎìú Î™®Îã¨ Í¥ÄÎ†® Ìï®ÏàòÎì§ (Î™ÖÌï® ÏôÑÏÑ± ÏãúÏä§ÌÖú)
        function openUploadModal() {
            if (!window.currentPriceData) {
                showUserMessage('Î®ºÏ†Ä Í∞ÄÍ≤©ÏùÑ Í≥ÑÏÇ∞Ìï¥Ï£ºÏÑ∏Ïöî.', 'warning');
                return;
            }
            
            const modal = document.getElementById('uploadModal');
            if (modal) {
                modal.style.display = 'flex';
                document.body.style.overflow = 'hidden';
                
                // ÌååÏùº ÏóÖÎ°úÎìú Ìïú Î≤àÎßå Ï¥àÍ∏∞Ìôî
                if (!modalFileUploadInitialized) {
                    initializeModalFileUpload();
                    modalFileUploadInitialized = true;
                }
            }
        }
        
        function initializeModalFileUpload() {
            const dropzone = document.getElementById('modalUploadDropzone');
            const fileInput = document.getElementById('modalFileInput');
            
            if (!dropzone || !fileInput) return;
            
            console.log('ÌååÏùº ÏóÖÎ°úÎìú Î™®Îã¨ Ï¥àÍ∏∞Ìôî ÏãúÏûë');
            
            // ÎìúÎ°≠Ï°¥ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ - Ìïú Î≤àÎßå Îì±Î°ù
            dropzone.addEventListener('click', function() {
                console.log('ÎìúÎ°≠Ï°¥ ÌÅ¥Î¶≠Îê®');
                fileInput.click();
            });
            
            // ÌååÏùº ÏûÖÎ†• Î≥ÄÍ≤Ω Ïù¥Î≤§Ìä∏ - Ìïú Î≤àÎßå Îì±Î°ù
            fileInput.addEventListener('change', function(e) {
                console.log('ÌååÏùº ÏÑ†ÌÉùÎê®:', e.target.files.length + 'Í∞ú');
                handleFileSelect(e);
            });
            
            // ÎìúÎûòÍ∑∏ Ïï§ ÎìúÎ°≠ Ïù¥Î≤§Ìä∏Îì§
            dropzone.addEventListener('dragover', function(e) {
                e.preventDefault();
                dropzone.classList.add('dragover');
            });
            
            dropzone.addEventListener('dragleave', function() {
                dropzone.classList.remove('dragover');
            });
            
            dropzone.addEventListener('drop', function(e) {
                e.preventDefault();
                dropzone.classList.remove('dragover');
                const files = Array.from(e.dataTransfer.files);
                console.log('ÎìúÎ°≠Îêú ÌååÏùº:', files.length + 'Í∞ú');
                handleFiles(files);
            });
            
            console.log('ÌååÏùº ÏóÖÎ°úÎìú Î™®Îã¨ Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
        }
        
        function handleFileSelect(e) {
            console.log('handleFileSelect Ìò∏Ï∂úÎê®');
            const files = Array.from(e.target.files);
            console.log('ÏÑ†ÌÉùÎêú ÌååÏùº Ïàò:', files.length);
            
            // ÌååÏùº ÏûÖÎ†•Í∞í Î¶¨ÏÖãÌïòÏó¨ Í∞ôÏùÄ ÌååÏùº Ïû¨ÏÑ†ÌÉù Í∞ÄÎä•ÌïòÍ≤å Ìï®
            e.target.value = '';
            
            handleFiles(files);
        }
        
        function handleFiles(files) {
            const validTypes = ['.jpg', '.jpeg', '.png', '.pdf', '.ai', '.eps', '.psd'];
            const maxSize = 10 * 1024 * 1024; // 10MB
            
            files.forEach(file => {
                const extension = '.' + file.name.split('.').pop().toLowerCase();
                
                if (!validTypes.includes(extension)) {
                    showUserMessage(`ÏßÄÏõêÌïòÏßÄ ÏïäÎäî ÌååÏùº ÌòïÏãùÏûÖÎãàÎã§: ${file.name}\\nÏßÄÏõê ÌòïÏãù: JPG, PNG, PDF, AI, EPS, PSD`, 'error');
                    return;
                }
                
                if (file.size > maxSize) {
                    showUserMessage(`ÌååÏùº ÌÅ¨Í∏∞Í∞Ä ÎÑàÎ¨¥ ÌÅΩÎãàÎã§: ${file.name}\\nÏµúÎåÄ 10MBÍπåÏßÄ ÏóÖÎ°úÎìú Í∞ÄÎä•Ìï©ÎãàÎã§.`, 'error');
                    return;
                }
                
                // ÏóÖÎ°úÎìúÎêú ÌååÏùº Î™©Î°ùÏóê Ï∂îÍ∞Ä
                const fileObj = {
                    id: Date.now() + Math.random(),
                    file: file,
                    name: file.name,
                    size: formatFileSize(file.size),
                    type: extension
                };
                
                uploadedFiles.push(fileObj);
                updateModalFileList();
            });
        }
        
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
        
        function updateModalFileList() {
            const uploadedFilesDiv = document.getElementById('modalUploadedFiles');
            const fileList = document.getElementById('modalFileList');
            
            if (!uploadedFilesDiv || !fileList) return;
            
            if (uploadedFiles.length === 0) {
                uploadedFilesDiv.style.display = 'none';
                return;
            }
            
            uploadedFilesDiv.style.display = 'block';
            fileList.innerHTML = '';
            
            uploadedFiles.forEach(fileObj => {
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.innerHTML = `
                    <div class="file-info">
                        <span class="file-icon">${getFileIcon(fileObj.type)}</span>
                        <div class="file-details">
                            <div class="file-name">${fileObj.name}</div>
                            <div class="file-size">${fileObj.size}</div>
                        </div>
                    </div>
                    <button class="file-remove" onclick="removeFile('${fileObj.id}')">ÏÇ≠Ï†ú</button>
                `;
                fileList.appendChild(fileItem);
            });
        }
        
        function getFileIcon(extension) {
            switch(extension.toLowerCase()) {
                case '.jpg':
                case '.jpeg':
                case '.png': return 'üñºÔ∏è';
                case '.pdf': return 'üìÑ';
                case '.ai': return 'üé®';
                case '.eps': return 'üé®';
                case '.psd': return 'üé®';
                default: return 'üìÅ';
            }
        }
        
        function removeFile(fileId) {
            uploadedFiles = uploadedFiles.filter(f => f.id != fileId);
            updateModalFileList();
        }
        
        function closeUploadModal() {
            const modal = document.getElementById('uploadModal');
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
                
                // ÏóÖÎ°úÎìúÎêú ÌååÏùº Ï¥àÍ∏∞Ìôî
                uploadedFiles = [];
                updateModalFileList();
                
                // ÌååÏùº ÏûÖÎ†• Ï¥àÍ∏∞Ìôî
                const fileInput = document.getElementById('modalFileInput');
                if (fileInput) {
                    fileInput.value = '';
                }
                
                const workMemo = document.getElementById('modalWorkMemo');
                if (workMemo) {
                    workMemo.value = '';
                }
                
                console.log('Î™®Îã¨ Îã´Ìûò - Î™®Îì† ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
            }
        }
        
        function selectUploadMethod(method) {
            const buttons = document.querySelectorAll('.btn-upload-method');
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
        }
        
        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú ÏûêÎèô Í≥ÑÏÇ∞ Î∞è Í∞§Îü¨Î¶¨ Ï¥àÍ∏∞Ìôî
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOMContentLoaded - Starting initialization');
            
            // ÏûêÎèô Í≥ÑÏÇ∞ Ï¥àÍ∏∞Ìôî
            initAutoCalculation();
        });
        
        
        // CommonGallery ÏãúÏä§ÌÖú ÏÇ¨Ïö© - Í∞§Îü¨Î¶¨ Î≥ÄÏàò Ï†úÍ±∞Îê®
        
        // CommonGallery ÏãúÏä§ÌÖúÏù¥ ÏûêÎèôÏúºÎ°ú Í∞§Îü¨Î¶¨ Ï¥àÍ∏∞Ìôî Ï≤òÎ¶¨

        // Í≥µÌÜµ Í∞§Îü¨Î¶¨ ÌåùÏóÖ Ìï®Ïàò ÏÇ¨Ïö© (common-gallery-popup.js)
        // openGalleryPopup(category) Ìï®ÏàòÎ•º ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî
        // ÌïòÏúÑ Ìò∏ÌôòÏÑ±ÏùÑ ÏúÑÌïú Î≥ÑÏπ≠
        const openProofPopup = window.openGalleryPopup;
        
        // Í∞§Îü¨Î¶¨ Î™®Îã¨ Ïó¥Í∏∞ (ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò ÏßÄÏõê) - Í∏∞Ï°¥ ÏΩîÎìú Ïú†ÏßÄ
        let stickerNewCurrentPage = 1;
        let stickerNewTotalPages = 1;
        
        function openGalleryModal() {
            // Ïù¥Ï†ú openProofPopupÏùÑ ÏÇ¨Ïö©ÌïòÎØÄÎ°ú Ïù¥ Ìï®ÏàòÎäî ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÏùå
            openProofPopup('Ïä§Ìã∞Ïª§');
        }
        
        // Í∞§Îü¨Î¶¨ Î™®Îã¨ Îã´Í∏∞
        function closeGalleryModal() {
            const modal = document.getElementById('galleryModal');
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }
        }
        
        // Ïä§Ìã∞Ïª§ Îâ¥ Í∞§Îü¨Î¶¨ ÌéòÏù¥ÏßÄ Î°úÎìú Ìï®Ïàò
        function loadStickerNewPage(page) {
            if (typeof page === 'string') {
                if (page === 'prev') {
                    page = Math.max(1, stickerNewCurrentPage - 1);
                } else if (page === 'next') {
                    page = Math.min(stickerNewTotalPages, stickerNewCurrentPage + 1);
                } else {
                    page = parseInt(page);
                }
            }
            
            if (page === stickerNewCurrentPage) return;
            
            const gallery = document.getElementById('galleryModalGrid');
            if (!gallery) return;
            
            // Î°úÎî© ÌëúÏãú
            gallery.innerHTML = '<div style="text-align: center; padding: 2rem; color: #666;"><div style="font-size: 1.5rem;">‚è≥</div><p>Ïù¥ÎØ∏ÏßÄÎ•º Î∂àÎü¨Ïò§Îäî Ï§ë...</p></div>';
            
            // API Ìò∏Ï∂ú
            fetch(`get_sticker_new_images.php?all=true&page=${page}&per_page=12`)
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.data) {
                        // Í∞§Îü¨Î¶¨ ÏóÖÎç∞Ïù¥Ìä∏
                        gallery.innerHTML = '';
                        data.data.forEach(image => {
                            const img = document.createElement('img');
                            img.src = image.path;
                            img.alt = image.title;
                            img.onclick = () => viewLargeImage(image.path, image.title);
                            gallery.appendChild(img);
                        });
                        
                        // ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
                        stickerNewCurrentPage = data.pagination.current_page;
                        stickerNewTotalPages = data.pagination.total_pages;
                        
                        // ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò UI ÏóÖÎç∞Ïù¥Ìä∏
                        updateStickerNewPagination(data.pagination);
                    } else {
                        gallery.innerHTML = '<div style="text-align: center; padding: 2rem; color: #666;"><p>Ïù¥ÎØ∏ÏßÄÎ•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.</p></div>';
                    }
                })
                .catch(error => {
                    console.error('Ïä§Ìã∞Ïª§ Îâ¥ Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ïò§Î•ò:', error);
                    gallery.innerHTML = '<div style="text-align: center; padding: 2rem; color: #666;"><p>Ïù¥ÎØ∏ÏßÄ Î°úÎìú Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.</p></div>';
                });
        }
        
        // ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò UI ÏóÖÎç∞Ïù¥Ìä∏
        function updateStickerNewPagination(pagination) {
            // ÌéòÏù¥ÏßÄ Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
            const pageInfo = document.getElementById('stickerNewPageInfo');
            if (pageInfo) {
                pageInfo.textContent = `ÌéòÏù¥ÏßÄ ${pagination.current_page} / ${pagination.total_pages} (Ï¥ù ${pagination.total_count}Í∞ú)`;
            }
            
            // Î≤ÑÌäº ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
            const prevBtn = document.getElementById('stickerNewPrevBtn');
            const nextBtn = document.getElementById('stickerNewNextBtn');
            
            if (prevBtn) {
                prevBtn.disabled = !pagination.has_prev;
            }
            if (nextBtn) {
                nextBtn.disabled = !pagination.has_next;
            }
            
            // ÌéòÏù¥ÏßÄ Î≤àÌò∏ Î≤ÑÌäº ÏÉùÏÑ±
            const pageNumbers = document.getElementById('stickerNewPageNumbers');
            if (pageNumbers) {
                pageNumbers.innerHTML = '';
                
                const startPage = Math.max(1, pagination.current_page - 2);
                const endPage = Math.min(pagination.total_pages, pagination.current_page + 2);
                
                for (let i = startPage; i <= endPage; i++) {
                    const pageBtn = document.createElement('button');
                    pageBtn.className = 'pagination-number' + (i === pagination.current_page ? ' active' : '');
                    pageBtn.textContent = i;
                    pageBtn.onclick = () => loadStickerNewPage(i);
                    pageNumbers.appendChild(pageBtn);
                }
            }
            
            // ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖò ÏÑπÏÖò ÌëúÏãú
            const paginationSection = document.getElementById('stickerNewPagination');
            if (paginationSection) {
                paginationSection.style.display = pagination.total_pages > 1 ? 'block' : 'none';
            }
        }
        
        // Ï†ÑÏ≤¥ Í∞§Îü¨Î¶¨ Î†åÎçîÎßÅ
        function renderFullGallery(images, container) {
            container.innerHTML = '';
            
            images.forEach((image, index) => {
                const img = document.createElement('img');
                img.src = image.thumbnail || image.path;
                img.alt = image.title || `Ïä§Ìã∞Ïª§ ÏÉòÌîå ${index + 1}`;
                img.onclick = function() {
                    openLightbox(image.path || image.src);
                };
                container.appendChild(img);
            });
        }
        
        // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù Í∞§Îü¨Î¶¨ Î†åÎçîÎßÅ (ÏÑ±Í≥µÌïú Î∞©Ïãù Ï†ÅÏö©)
        function renderStickerGallery(images, container) {
            console.log('üé® Ïä§Ìã∞Ïª§ Í∞§Îü¨Î¶¨ Î†åÎçîÎßÅ ÏãúÏûë:', images.length + 'Í∞ú');
            
            const galleryHTML = `
                <div class="lightbox-viewer zoom-box" id="stickerZoomBox"></div>
                <div class="thumbnail-grid" id="stickerThumbnailGrid"></div>
            `;
            
            container.innerHTML = galleryHTML;
            
            const zoomBox = document.getElementById('stickerZoomBox');
            const thumbnailGrid = document.getElementById('stickerThumbnailGrid');
            
            if (!zoomBox || !thumbnailGrid) {
                console.error('Í∞§Îü¨Î¶¨ DOM ÏöîÏÜå ÏÉùÏÑ± Ïã§Ìå®');
                return;
            }
            
            // Ïç∏ÎÑ§Ïùº Í∑∏Î¶¨Îìú ÏÉùÏÑ± (4Í∞ú Ïù¥ÎØ∏ÏßÄ)
            images.forEach((image, index) => {
                const thumbnail = document.createElement('img');
                thumbnail.src = image.image_path;
                thumbnail.alt = image.title || `Ïä§Ìã∞Ïª§ ÏûëÌíà ${index + 1}`;
                thumbnail.className = index === 0 ? 'active' : '';
                
                // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù Ïù¥ÎØ∏ÏßÄ ÏÑ†ÌÉù Ïù¥Î≤§Ìä∏
                thumbnail.onclick = function() { 
                    selectStickerImage(this, image.image_path, image.title); 
                };
                
                thumbnailGrid.appendChild(thumbnail);
            });
            
            // Ï≤´ Î≤àÏß∏ Ïù¥ÎØ∏ÏßÄ ÏûêÎèô ÏÑ†ÌÉù (Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù)
            if (images.length > 0) {
                const firstImage = images[0];
                setStickerMainImage(firstImage.image_path);
                initializeStickerZoom();
                
                console.log('Ï≤´ Î≤àÏß∏ Ïä§Ìã∞Ïª§ Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï:', firstImage.title);
            }
            
            console.log('Ïä§Ìã∞Ïª§ Í∞§Îü¨Î¶¨ Î†åÎçîÎßÅ ÏôÑÎ£å');
        }
        
        // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù Ïù¥ÎØ∏ÏßÄ ÏÑ†ÌÉù (ÏÑ±Í≥µÌïú Î∞©Ïãù)
        function selectStickerImage(thumb, imagePath, title) {
            console.log('üñºÔ∏è Ïä§Ìã∞Ïª§ Ïù¥ÎØ∏ÏßÄ ÏÑ†ÌÉù:', title);
            
            // Î™®Îì† Ïç∏ÎÑ§Ïùº ÎπÑÌôúÏÑ±Ìôî (Ïä§Ìã∞Ïª§ Ï†ÑÏö© ÏÑ†ÌÉùÏûê)
            document.querySelectorAll('#stickerThumbnailGrid img').forEach(img => {
                img.classList.remove('active');
            });
            
            // ÏÑ†ÌÉùÎêú Ïç∏ÎÑ§Ïùº ÌôúÏÑ±Ìôî
            thumb.classList.add('active');
            
            // Î©îÏù∏ Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï (Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù)
            setStickerMainImage(imagePath);
        }
        
        // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù Î©îÏù∏ Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï (Î∞∞Í≤ΩÏù¥ÎØ∏ÏßÄ Î∞©Ïãù)
        function setStickerMainImage(imagePath) {
            const zoomBox = document.getElementById('stickerZoomBox');
            if (!zoomBox) {
                console.error('Ïä§Ìã∞Ïª§ Ï§åÎ∞ïÏä§ ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏùå');
                return;
            }
            
            console.log('üñºÔ∏è Ïä§Ìã∞Ïª§ Î©îÏù∏ Ïù¥ÎØ∏ÏßÄ ÏÑ§Ï†ï:', imagePath);
            
            // Ìè¨Ïä§ÌÑ∞ÏôÄ ÎèôÏùºÌïú background-image Î∞©Ïãù Ï†ÅÏö©
            zoomBox.style.backgroundImage = `url('${imagePath}')`;
            zoomBox.style.backgroundSize = 'contain';
            zoomBox.style.backgroundPosition = 'center';
            zoomBox.style.backgroundRepeat = 'no-repeat';
            zoomBox.style.cursor = 'zoom-in';
        }
        
        function analyzeAndAdaptImage(imagePath) {
            const img = new Image();
            img.onload = function() {
                const aspectRatio = this.width / this.height;
                const isSmall = this.width < 300 && this.height < 300;
                
                const zoomBox = document.getElementById('zoomBox');
                if (!zoomBox) return;
                
                currentImageType = isSmall ? 'small' : 'large';
                
                if (isSmall) {
                    // ÏûëÏùÄ Ïù¥ÎØ∏ÏßÄ: ÏµúÎåÄ ÌÅ¨Í∏∞Î°ú ÌëúÏãú
                    originalBackgroundSize = '100%';
                    zoomBox.style.backgroundSize = '100%';
                } else if (aspectRatio > 1.5) {
                    // Í∞ÄÎ°úÍ∞Ä Í∏¥ Ïù¥ÎØ∏ÏßÄ
                    originalBackgroundSize = 'contain';
                    zoomBox.style.backgroundSize = 'contain';
                } else if (aspectRatio < 0.67) {
                    // ÏÑ∏Î°úÍ∞Ä Í∏¥ Ïù¥ÎØ∏ÏßÄ
                    originalBackgroundSize = 'contain';
                    zoomBox.style.backgroundSize = 'contain';
                } else {
                    // ÏùºÎ∞ò Ïù¥ÎØ∏ÏßÄ
                    originalBackgroundSize = 'contain';
                    zoomBox.style.backgroundSize = 'contain';
                }
                
                console.log(`Ïù¥ÎØ∏ÏßÄ Î∂ÑÏÑù: ${this.width}x${this.height}, Ï¢ÖÌö°ÎπÑ: ${aspectRatio.toFixed(2)}, ÌÉÄÏûÖ: ${currentImageType}`);
            };
            img.src = imagePath;
        }
        
        // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù Ï§å ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî (ÏÑ±Í≥µÌïú Î∞©Ïãù)
        function initializeStickerZoom() {
            const zoomBox = document.getElementById('stickerZoomBox');
            if (!zoomBox) {
                console.error('Ïä§Ìã∞Ïª§ Ï§åÎ∞ïÏä§ Ï¥àÍ∏∞Ìôî Ïã§Ìå®');
                return;
            }
            
            console.log('üîç Ïä§Ìã∞Ïª§ Ï§å ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî ÏãúÏûë');
            
            // DOM ÏôÑÏ†Ñ Ïû¨ÏÉùÏÑ±ÏúºÎ°ú Ïù¥Î≤§Ìä∏ Ï§ëÎ≥µ Î∞©ÏßÄ (Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù)
            const newZoomBox = zoomBox.cloneNode(true);
            zoomBox.parentNode.replaceChild(newZoomBox, zoomBox);
            
            // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù ÎßàÏö∞Ïä§ Ïù¥Î≤§Ìä∏ (ÎßàÏö∞Ïä§ Ìä∏ÎûòÌÇπ)
            newZoomBox.addEventListener('mousemove', function(e) {
                const rect = this.getBoundingClientRect();
                const x = ((e.clientX - rect.left) / rect.width) * 100;
                const y = ((e.clientY - rect.top) / rect.height) * 100;

                // Ïã§ÏãúÍ∞Ñ Î∞∞Í≤Ω ÏúÑÏπò Î≥ÄÍ≤Ω (Ìè¨Ïä§ÌÑ∞ Ìò∏Î≤Ñ Ìö®Í≥º)
                this.style.backgroundSize = '200%'; // ÌôïÎåÄ
                this.style.backgroundPosition = `${x}% ${y}%`;
            });
            
            // ÎßàÏö∞Ïä§ ÎÇòÍ∞ÄÍ∏∞Ïãú ÏõêÏÉÅÎ≥µÍµ¨
            newZoomBox.addEventListener('mouseleave', function() {
                this.style.backgroundSize = 'contain';
                this.style.backgroundPosition = 'center';
            });
            
            // ÌÅ¥Î¶≠ÏúºÎ°ú ÎùºÏù¥Ìä∏Î∞ïÏä§ Ïó¥Í∏∞ (Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù)
            newZoomBox.addEventListener('click', function() {
                const bgImage = this.style.backgroundImage;
                if (bgImage) {
                    const imageUrl = bgImage.slice(5, -2); // url(' ') Ï†úÍ±∞
                    openStickerLightbox(imageUrl);
                }
            });
            
            console.log('Ïä§Ìã∞Ïª§ Ï§å ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî ÏôÑÎ£å (Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù)');
        }
        
        function animate() {
            const ease = 0.15; // Î∂ÄÎìúÎü¨Ïö¥ Ïï†ÎãàÎ©îÏù¥ÏÖò
            
            currentX += (targetX - currentX) * ease;
            currentY += (targetY - currentY) * ease;
            currentSize += (targetSize - currentSize) * ease;
            
            const zoomBox = document.getElementById('zoomBox');
            if (zoomBox) {
                zoomBox.style.backgroundSize = `${currentSize}%`;
                zoomBox.style.backgroundPosition = `${currentX}% ${currentY}%`;
            }
            
            // Ïï†ÎãàÎ©îÏù¥ÏÖò Í≥ÑÏÜç
            if (Math.abs(targetX - currentX) > 0.1 || 
                Math.abs(targetY - currentY) > 0.1 || 
                Math.abs(targetSize - currentSize) > 0.1) {
                animationId = requestAnimationFrame(animate);
            } else {
                animationId = null;
            }
        }
        
        // Ìè¨Ïä§ÌÑ∞ Î∞©Ïãù ÎùºÏù¥Ìä∏Î∞ïÏä§ (ÏÑ±Í≥µÌïú Î∞©Ïãù)
        function openStickerLightbox(imagePath) {
            console.log('üîç Ïä§Ìã∞Ïª§ ÎùºÏù¥Ìä∏Î∞ïÏä§ Ïó¥Í∏∞:', imagePath);
            
            if (typeof EnhancedImageLightbox !== 'undefined') {
                const lightbox = new EnhancedImageLightbox({
                    closeOnImageClick: true,
                    showNavigation: false,
                    showCaption: true,
                    enableKeyboard: true,
                    zoomEnabled: true
                });
                
                lightbox.open([{
                    src: imagePath,
                    title: 'üè∑Ô∏è Ïä§Ìã∞Ïª§ ÏûëÌíà ÌôïÎåÄÎ≥¥Í∏∞',
                    description: 'Ïã§Ï†ú Í≥†Í∞ù Ï£ºÎ¨∏ÏúºÎ°ú Ï†úÏûëÎêú Ïä§Ìã∞Ïª§ÏûÖÎãàÎã§. ÌÅ¥Î¶≠ÌïòÎ©¥ Îã´ÌûôÎãàÎã§.'
                }]);
                
                console.log('Ïä§Ìã∞Ïª§ ÎùºÏù¥Ìä∏Î∞ïÏä§ Ïó¥Î¶º');
            } else {
                console.warn('EnhancedImageLightbox ÎùºÏù¥Î∏åÎü¨Î¶¨ ÏóÜÏùå, Í∏∞Î≥∏ ÏÉàÏ∞Ω Ïó¥Í∏∞');
                window.open(imagePath, '_blank');
            }
        }

        // ÌÜµÏùºÎêú Í∞§Îü¨Î¶¨ ÌåùÏóÖ Ï†ÑÏó≠ Î≥ÄÏàò
        let unifiedStickerGallery = null;

        // ÌÜµÏùºÎêú Í∞§Îü¨Î¶¨ ÌåùÏóÖ Ï¥àÍ∏∞Ìôî Ìï®Ïàò
        function initializePopupGallery() {
            console.log('Ïä§Ìã∞Ïª§ ÌÜµÏùºÎêú Í∞§Îü¨Î¶¨ ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî');
            
            // ÌÜµÏùºÎêú Í∞§Îü¨Î¶¨ ÌåùÏóÖ Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉùÏÑ±
            unifiedStickerGallery = new UnifiedGalleryPopup({
                category: 'sticker',
                apiUrl: '/api/get_real_orders_portfolio.php',
                title: 'Ïä§Ìã∞Ïª§ Ï†ÑÏ≤¥ Í∞§Îü¨Î¶¨',
                icon: 'üè∑Ô∏è',
                perPage: 18 // 6√ó3 Í∑∏Î¶¨Îìú
            });
            
            // Ï†ÑÏó≠ Ìï®ÏàòÎ°ú Îì±Î°ù (HTML onclickÏóêÏÑú ÏÇ¨Ïö©)
            window.openGalleryModal = function() {
                console.log('üì∏ ÌÜµÏùºÎêú Ïä§Ìã∞Ïª§ Í∞§Îü¨Î¶¨ ÌåùÏóÖ Ïó¥Í∏∞');
                if (unifiedStickerGallery) {
                    unifiedStickerGallery.open();
                }
            };
            
            // Ï†ÑÏó≠ Î≥ÄÏàòÏóêÎèÑ Îì±Î°ù (ÌéòÏù¥ÏßÄÎÑ§Ïù¥ÏÖòÏóêÏÑú ÏÇ¨Ïö©)
            window[`unifiedGalleryPopup_sticker`] = unifiedStickerGallery;
            
            console.log('‚ú® Ïä§Ìã∞Ïª§ ÌÜµÏùºÎêú Í∞§Îü¨Î¶¨ ÏãúÏä§ÌÖú Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
        }

        // Ïû¨Ïßà ÏïàÎÇ¥ Î™®Îã¨ Ïó¥Í∏∞
        function openMaterialGuide() {
            const modal = document.getElementById('materialGuideModal');
            if (modal) {
                modal.style.display = 'flex';
                document.body.style.overflow = 'hidden';
            }
        }

        // Ïû¨Ïßà ÏïàÎÇ¥ Î™®Îã¨ Îã´Í∏∞
        function closeMaterialGuide() {
            const modal = document.getElementById('materialGuideModal');
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }
        }

        // ESC ÌÇ§Î°ú Î™®Îã¨ Îã´Í∏∞
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeMaterialGuide();
            }
        });

        // Îã®ÏàúÌïú ÌÅ¨Í∏∞ Í≤ÄÏ¶ù Ìï®Ïàò (ÌïÑÎìúÎ•º Îñ†ÎÇ† ÎïåÎßå Ïã§Ìñâ)
        function validateSize(input, type) {
            // ÏûÖÎ†•Í∞íÏù¥ ÏóÜÏúºÎ©¥ Í≤ÄÏ¶ùÌïòÏßÄ ÏïäÏùå
            if (!input.value || input.value.trim() === '') {
                input.style.borderColor = '#ddd';
                input.style.backgroundColor = '';
                return true;
            }
            
            const value = parseInt(input.value);
            const max = 560;
            
            // 560mm Ï¥àÍ≥º ÏãúÎßå Í≤ÄÏ¶ù
            if (isNaN(value) || value > max) {
                alert(`${type} ÌÅ¨Í∏∞Îäî ${max}mm Ïù¥ÌïòÎ°ú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.\nÌòÑÏû¨ ÏûÖÎ†•Í∞í: ${input.value}mm`);
                
                // ÏóêÎü¨ Ïä§ÌÉÄÏùº Ï†ÅÏö©
                input.style.borderColor = '#dc3545';
                input.style.backgroundColor = '#fff5f5';
                
                // Ìè¨Ïª§Ïä§ Î≥µÍ∑Ä
                setTimeout(() => {
                    input.focus();
                    input.select();
                }, 100);
                
                return false;
            } else {
                // Ï†ïÏÉÅ Ïä§ÌÉÄÏùº Î≥µÏõê
                input.style.borderColor = '#ddd';
                input.style.backgroundColor = '';
            }
            
            return true;
        }
    </script>

    <script type="text/javascript">
    (function($) {
      $(function() {
        var $form = $('form[action$="basket_post.php"]');
        var $garo = $('input[name="garo"]');
        var $sero = $('input[name="sero"]');
        var $domu = $('select[name="domusong"]');

        function toNumber(v) {
          if (v == null) return null;
          var s = $.trim(String(v)).replace(/[^\d.]/g, '');
          if (s === '') return null;
          var n = parseFloat(s);
          return isNaN(n) ? null : n;
        }

        // from: 'blur' | 'submit' | (Í∑∏ Ïô∏: Î∞©Ïñ¥Ïö©)
        function applyRules(from) {
          var w = toNumber($garo.val());
          var h = toNumber($sero.val());

          // ÌòÑÏû¨ Ìè¨Ïª§Ïä§Îêú ÏóòÎ¶¨Î®ºÌä∏
          var active = document.activeElement;

          // 1) 50mm ÎØ∏ÎßåÏù¥Î©¥ ÎèÑÎ¨¥ÏÜ° ÏûêÎèô ÏÑ†ÌÉù (Í≤ΩÍ≥† ÏóÜÏùå)
          if ((w != null && w < 50) || (h != null && h < 50)) {
            $domu.val('08000 ÏÇ¨Í∞ÅÎèÑÎ¨¥ÏÜ°'); // Í∞í Ï†ïÌôïÌûà ÏùºÏπò
          }

          // 2) 10mm ÎØ∏ÎßåÏù¥Î©¥ Í≤ΩÍ≥† ÎåÄÏÉÅ
          var tooSmallTarget = null;
          if (w != null && w < 10) tooSmallTarget = $garo;
          if (h != null && h < 10) tooSmallTarget = tooSmallTarget || $sero;

          // ‚ö†Ô∏è Î∞©Ïñ¥ Î°úÏßÅ: ÏûÖÎ†• Ï§ë(Ìï¥Îãπ Ïπ∏Ïù¥ Ïó¨Ï†ÑÌûà Ìè¨Ïª§Ïä§)ÏóêÎäî Í≤ΩÍ≥† Í∏àÏßÄ
          var isEditing =
            active === $garo.get(0) || active === $sero.get(0);

          if (tooSmallTarget) {
            // blur/submitÏóêÏÑúÎßå Í≤ΩÍ≥† ÌóàÏö©, Í∑∏Î¶¨Í≥† Ìé∏Ïßë Ï§ëÏù¥Î©¥ Í≤ΩÍ≥† Í∏àÏßÄ
            var allowAlert = (from === 'blur' || from === 'submit') && !isEditing;

            if (allowAlert) {
              alert('Î≥ÑÎèÑÍ≤¨Ï†ÅÏùÑ ÏöîÏ≤≠ÌïòÏÑ∏Ïöî Î¨∏Ïùò 1688-2384');
            }

            // Ï†úÏ∂ú Îã®Í≥ÑÏóêÏÑúÎäî Ï∞®Îã®, blur Îã®Í≥ÑÏóêÏÑúÎäî ÏïàÎÇ¥Îßå ÏàòÌñâ(Ï†úÏ∂ú ÏïÑÎãò)
            if (from === 'submit') {
              setTimeout(function(){ tooSmallTarget.focus(); }, 0);
              return { ok: false };
            }
          }

          return { ok: true };
        }

        // Í∞Å Ïπ∏ÏùÑ Îñ†ÎÇ† ÎïåÎßå Í≤ÄÏÇ¨ (ÏûÖÎ†• ÎèÑÏ§ëÏóêÎäî Í≤ÄÏÇ¨ X)
        $garo.on('blur', function(){ applyRules('blur'); });
        $sero.on('blur', function(){ applyRules('blur'); });

        // Ï†úÏ∂ú ÏßÅÏ†Ñ ÏµúÏ¢Ö Í≤ÄÏÇ¨ (blurÎ•º Í±¥ÎÑàÎõ¥ Í≤ΩÏö∞ ÎåÄÎπÑ)
        $form.on('submit', function(e) {
          var result = applyRules('submit');
          if (!result.ok) {
            e.preventDefault();
            return false;
          }
        });

        // ‚úã ÌòπÏãú Í∏∞Ï°¥Ïóê Í±∏Î†§ ÏûàÎçò input/keyup Í≤ÄÏÇ¨Îì§Ïù¥ ÏûàÏúºÎ©¥,
        // Ïö∞Î¶¨ Î°úÏßÅÏù¥ Í≤ΩÍ≥†Î•º ÎßâÏïÑÏ£ºÏßÄÎßå, ÏôÑÏ†Ñ Ï∞®Îã®ÌïòÎ†§Î©¥ ÏïÑÎûòÏ≤òÎüº Ï†úÍ±∞ÎèÑ Í≥†Î†§:
        // $garo.off('input keyup change');
        // $sero.off('input keyup change');
      });
    })(jQuery);
    </script>

    <!-- ÌÜµÌï© Í∞§Îü¨Î¶¨ JavaScript Ìè¨Ìï® -->
    <script src="../../js/common-gallery-popup.js"></script>
    <script src="../../duson/js/gallery-system.js" defer></script>

    <!-- Ïä§Ìã∞Ïª§ Ïû•Î∞îÍµ¨Îãà Ïä§ÌÅ¨Î¶ΩÌä∏ -->
    <script>
        // Ïä§Ìã∞Ïª§ Ï†ÑÏö© Ïû•Î∞îÍµ¨Îãà Ï∂îÍ∞Ä Ìï®Ïàò (ÌÜµÌï© Î™®Îã¨ Ìå®ÌÑ¥)
        window.handleModalBasketAdd = function(uploadedFiles, onSuccess, onError) {
            console.log("Ïä§Ìã∞Ïª§ Ïû•Î∞îÍµ¨Îãà Ï∂îÍ∞Ä ÏãúÏûë");

            if (!window.currentPriceData) {
                console.error("Í∞ÄÍ≤© Í≥ÑÏÇ∞Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§");
                if (onError) onError("Î®ºÏ†Ä Í∞ÄÍ≤©ÏùÑ Í≥ÑÏÇ∞Ìï¥Ï£ºÏÑ∏Ïöî.");
                return;
            }

            const formData = new FormData();
            formData.append("action", "add_to_basket");
            formData.append("product_type", "sticker_new");
            formData.append("MY_type", document.getElementById("MY_type").value);
            formData.append("Section", document.getElementById("Section").value);
            formData.append("POtype", document.getElementById("POtype").value);
            formData.append("MY_amount", document.getElementById("MY_amount").value);
            formData.append("ordertype", document.getElementById("ordertype").value);
            formData.append("calculated_price", Math.round(window.currentPriceData.total_price));
            formData.append("calculated_vat_price", Math.round(window.currentPriceData.vat_price));

            const workMemo = document.getElementById("modalWorkMemo");
            if (workMemo) formData.append("work_memo", workMemo.value);

            formData.append("upload_method", window.selectedUploadMethod || "upload");

            if (uploadedFiles && uploadedFiles.length > 0) {
                uploadedFiles.forEach((file, index) => {
                    formData.append("uploaded_files[" + index + "]", file);
                });
            }

            fetch("add_to_basket.php", {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (onSuccess) onSuccess(data);
                } else {
                    if (onError) onError(data.message);
                }
            })
            .catch(error => {
                console.error("Ïû•Î∞îÍµ¨Îãà Ï∂îÍ∞Ä Ïò§Î•ò:", error);
                if (onError) onError("ÎÑ§Ìä∏ÏõåÌÅ¨ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
            });
        };
    </script>

    </div> <!-- product-container ÎÅù -->

    <!-- Ïû¨Ïßà ÏïàÎÇ¥ Î™®Îã¨ -->
    <div id="materialGuideModal" class="material-modal" style="display: none;">
        <div class="material-modal-overlay" onclick="closeMaterialGuide()"></div>
        <div class="material-modal-content">
            <div class="material-modal-header">
                <h2>üìã Ïä§Ìã∞Ïª§ Ïû¨Ïßà ÏïàÎÇ¥</h2>
                <button class="material-modal-close" onclick="closeMaterialGuide()">&times;</button>
            </div>
            <div class="material-modal-body">
                <img src="../../shop/img/stickermaterial.jpg" alt="Ïä§Ìã∞Ïª§ Ïû¨Ïßà ÏïàÎÇ¥" style="width: 100%; height: auto;">
            </div>
        </div>
    </div>

    <?php
    // Í≥µÌÜµ Ìë∏ÌÑ∞ Ìè¨Ìï®
    include "../../includes/footer.php";
    ?>

    <?php
    // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ Ï¢ÖÎ£å
    if ($db) {
        mysqli_close($db);
    }
    ?>
</body>
</html>